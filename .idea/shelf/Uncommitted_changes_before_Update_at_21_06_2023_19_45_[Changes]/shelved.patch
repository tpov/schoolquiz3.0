Index: app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tpov.schoolquiz.presentation.main\r\n\r\nimport android.content.Context\r\nimport android.graphics.*\r\nimport android.view.*\r\nimport android.widget.*\r\nimport androidx.constraintlayout.widget.ConstraintLayout\r\nimport androidx.recyclerview.widget.DiffUtil\r\nimport androidx.recyclerview.widget.ListAdapter\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.bumptech.glide.load.resource.bitmap.GranularRoundedCorners\r\nimport com.bumptech.glide.request.RequestOptions\r\nimport com.google.cloud.translate.TranslateOptions\r\nimport com.google.cloud.translate.Translation\r\nimport com.tpov.schoolquiz.R\r\nimport com.tpov.schoolquiz.data.database.entities.QuestionEntity\r\nimport com.tpov.schoolquiz.data.database.entities.QuizEntity\r\nimport com.tpov.schoolquiz.databinding.ActivityMainItemBinding\r\nimport com.tpov.schoolquiz.presentation.custom.Logcat\r\nimport com.tpov.schoolquiz.presentation.custom.ResizeAndCrop\r\nimport com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager.getTpovId\r\nimport com.tpov.schoolquiz.secure.Secure\r\nimport kotlinx.android.synthetic.main.activity_main_item.view.*\r\nimport kotlinx.coroutines.InternalCoroutinesApi\r\nimport org.jetbrains.anko.runOnUiThread\r\nimport java.io.File\r\nimport java.util.*\r\n\r\n\r\nclass MainActivityAdapter @OptIn(InternalCoroutinesApi::class) constructor(\r\n    private val listener: Listener,\r\n    private val context: Context,\r\n    private val viewModel: MainActivityViewModel\r\n) :\r\n    ListAdapter<QuizEntity, MainActivityAdapter.ItemHolder>(ItemComparator()) {\r\n    var onDeleteButtonClick: ((RecyclerView.ViewHolder) -> Unit)? = null\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ItemHolder {\r\n        return ItemHolder.create(parent, listener)\r\n    }\r\n\r\n\r\n    @OptIn(InternalCoroutinesApi::class)\r\n    override fun onBindViewHolder(holder: ItemHolder, position: Int) {\r\n        val item = getItem(position)\r\n        holder.setData(item, listener, context, viewModel)\r\n    }\r\n\r\n\r\n    class ItemComparator : DiffUtil.ItemCallback<QuizEntity>() {\r\n        override fun areItemsTheSame(oldItem: QuizEntity, newItem: QuizEntity): Boolean {\r\n            return oldItem.id == newItem.id\r\n        }\r\n\r\n        override fun areContentsTheSame(oldItem: QuizEntity, newItem: QuizEntity): Boolean {\r\n            return oldItem == newItem\r\n        }\r\n    }\r\n\r\n    class ItemHolder(view: View, private val listener: Listener) : RecyclerView.ViewHolder(view),\r\n        View.OnTouchListener {\r\n\r\n        @OptIn(InternalCoroutinesApi::class)\r\n        fun log(msg: String) {\r\n            Logcat.log(msg, \"MainActivityAdapter\", Logcat.LOG_ACTIVITY)\r\n        }\r\n\r\n        val constraintLayout: ConstraintLayout = itemView.findViewById(R.id.constraint_layout)\r\n\r\n        private val binding = ActivityMainItemBinding.bind(view)\r\n        val imvGradLightQuiz: ImageView = itemView.findViewById(R.id.imv_gradient_light_quiz)\r\n        val imvGradHardQuiz: ImageView = itemView.findViewById(R.id.imv_grafient_hard_quiz)\r\n\r\n        private fun showPopupMenu(view: View, id: Int) {\r\n            val popupMenu = PopupMenu(view.context, view)\r\n            popupMenu.inflate(R.menu.popup_menu)\r\n\r\n            popupMenu.setOnMenuItemClickListener { menuItem ->\r\n                when (menuItem.itemId) {\r\n                    R.id.menu_send -> {\r\n                        // Обработка выбора элемента 1\r\n                        listener.sendItem(id)\r\n                        true\r\n                    }\r\n\r\n                    R.id.menu_delete -> {\r\n                        // Обработка выбора элемента 2\r\n                        listener.deleteItem(id)\r\n                        true\r\n                    }\r\n\r\n                    R.id.menu_edit -> {\r\n                        // Обработка выбора элемента 3\r\n                        listener.editItem(id)\r\n                        true\r\n                    }\r\n\r\n                    else -> false\r\n                }\r\n            }\r\n            popupMenu.show()\r\n        }\r\n\r\n        @OptIn(InternalCoroutinesApi::class)\r\n        fun setData(\r\n            quizEntity: QuizEntity,\r\n            listener: Listener,\r\n            context: Context,\r\n            viewModel: MainActivityViewModel\r\n        ) = with(binding) {\r\n\r\n            log(\"\")\r\n            if (viewModel.getQuizById(quizEntity.id!!).showItemMenu) {\r\n                constraintLayout.setOnLongClickListener {\r\n                    showPopupMenu(it, quizEntity.id!!)\r\n                    true\r\n                }\r\n\r\n            } else constraintLayout.visibility = View.VISIBLE\r\n            try {\r\n\r\n                val file = File(context.cacheDir, \"${quizEntity.picture}\")\r\n\r\n                fun dpToPx(dp: Int, context: Context): Int {\r\n                    val density = context.resources.displayMetrics.density\r\n                    return (dp * density).toInt()\r\n                }\r\n\r\n                val widthInDp = 100\r\n                val heightInDp = 75\r\n                val radius = 25\r\n\r\n                val widthInPx = dpToPx(widthInDp, context)\r\n                val heightInPx = dpToPx(heightInDp, context)\r\n                val radinPx = dpToPx(radius, context)\r\n\r\n                Glide.with(context)\r\n                    .asBitmap()\r\n                    .load(file)\r\n                    .apply(\r\n                        RequestOptions()\r\n                            .override(widthInPx, heightInPx)\r\n                            .transform(\r\n                                ResizeAndCrop(widthInPx, heightInPx),\r\n                                GranularRoundedCorners(0f, radinPx.toFloat(), radinPx.toFloat(), 0f)\r\n                            )\r\n                    )\r\n                    .into(imageView)\r\n\r\n            } catch (e: Exception) {\r\n                log(\"onBindViewHolder Exception $e\")\r\n            }\r\n\r\n            var goHardQuiz =\r\n                \"${this.root.context.getString(R.string.go_hard_question)} - ${quizEntity.nameQuiz}\"\r\n\r\n            if (quizEntity.event == 5) initViewQuiz5(quizEntity, viewModel, listener)\r\n            else initView(quizEntity, goHardQuiz, viewModel, listener)\r\n\r\n        }\r\n\r\n        @OptIn(InternalCoroutinesApi::class)\r\n        private fun ActivityMainItemBinding.initViewQuiz5(\r\n            quizEntity: QuizEntity,\r\n            viewModel: MainActivityViewModel,\r\n            listener: Listener\r\n        ) {\r\n            if (quizEntity.stars >= MAX_PERCENT) {\r\n\r\n                log(\"quizEntity.stars 1\")\r\n                imvGradLightQuiz.visibility = View.VISIBLE\r\n                imvGradHardQuiz.visibility = View.GONE\r\n\r\n            } else if (quizEntity.ratingPlayer == 3) {\r\n\r\n                log(\"quizEntity.stars 2\")\r\n                imvGradLightQuiz.visibility = View.GONE\r\n                imvGradHardQuiz.visibility = View.VISIBLE\r\n\r\n            } else if (quizEntity.tpovId == getTpovId()) {\r\n\r\n                imvGradLightQuiz.visibility = View.GONE\r\n                imvGradHardQuiz.visibility = View.GONE\r\n                imvGradientTranslateQuiz.visibility = View.GONE\r\n\r\n            } else {\r\n\r\n                log(\"quizEntity.stars 3\")\r\n                chbTypeQuiz.visibility = View.GONE\r\n                imvGradLightQuiz.visibility = View.GONE\r\n                imvGradHardQuiz.visibility = View.GONE\r\n            }\r\n\r\n            chbTypeQuiz.visibility = View.VISIBLE\r\n            chbTypeQuiz.isChecked = quizEntity.stars >= MAX_PERCENT\r\n\r\n            imvTranslate.imageAlpha = 128\r\n\r\n            val lvlTranslate = viewModel.findValueForDeviceLocale(quizEntity.id!!)\r\n\r\n            //imvTranslate\r\n            if (lvlTranslate <= 100) imvTranslate.setColorFilter(Color.GRAY)\r\n            else if (lvlTranslate <= 200) imvTranslate.setColorFilter(Color.YELLOW)\r\n            else imvTranslate.setColorFilter(Color.BLUE)\r\n\r\n            ratingBar.rating = quizEntity.ratingPlayer.toFloat() / 100\r\n\r\n            mainTitleButton.text = quizEntity.nameQuiz\r\n            mainTitleButton.setOnClickListener {\r\n                listener.onClick(quizEntity.id!!, chbTypeQuiz.isChecked)\r\n            }\r\n            /*imvGradHardQuiz.setOnClickListener {\r\n                listener.onClick(quizEntity.id!!, chbTypeQuiz.isChecked)\r\n            }\r\n            imvGradLightQuiz.setOnClickListener {\r\n                listener.onClick(quizEntity.id!!, chbTypeQuiz.isChecked)\r\n            }\r\n            imvTranslate.setOnClickListener {\r\n                listener.onClick(quizEntity.id!!, chbTypeQuiz.isChecked)\r\n            }*/\r\n\r\n            tvName.visibility = View.VISIBLE\r\n            tvTime.visibility = View.VISIBLE\r\n            tvName.text = quizEntity.userName\r\n            tvTime.text = quizEntity.data\r\n        }\r\n\r\n        @OptIn(InternalCoroutinesApi::class)\r\n        private fun ActivityMainItemBinding.initView(\r\n            quizEntity: QuizEntity,\r\n            goHardQuiz: String,\r\n            viewModel: MainActivityViewModel,\r\n            listener: Listener\r\n        ) {\r\n            if (quizEntity.stars == MAX_PERCENT) {\r\n                Toast.makeText(binding.root.context, goHardQuiz, Toast.LENGTH_SHORT).show()\r\n            }\r\n\r\n            if (quizEntity.stars >= MAX_PERCENT) {\r\n                log(\"quizEntity.stars 1\")\r\n                imvGradLightQuiz.visibility = View.VISIBLE\r\n                imvGradHardQuiz.visibility = View.GONE\r\n                chbTypeQuiz.visibility = View.VISIBLE\r\n\r\n            } else if (quizEntity.stars == 120) {\r\n                log(\"quizEntity.stars 2\")\r\n                chbTypeQuiz.visibility = View.VISIBLE\r\n                imvGradLightQuiz.visibility = View.GONE\r\n                imvGradHardQuiz.visibility = View.VISIBLE\r\n\r\n            } else {\r\n                log(\"quizEntity.stars 3\")\r\n                chbTypeQuiz.visibility = View.GONE\r\n                imvGradLightQuiz.visibility = View.GONE\r\n                imvGradHardQuiz.visibility = View.GONE\r\n            }\r\n\r\n            imvTranslate.imageAlpha = 128\r\n\r\n            val lvlTranslate = viewModel.findValueForDeviceLocale(quizEntity.id!!)\r\n\r\n            //imvTranslate\r\n            if (lvlTranslate <= 100) imvTranslate.setColorFilter(Color.GRAY)\r\n            else if (lvlTranslate <= 200) imvTranslate.setColorFilter(Color.YELLOW)\r\n            else imvTranslate.setColorFilter(Color.BLUE)\r\n\r\n            if (quizEntity.stars <= MAX_PERCENT) ratingBar.rating =\r\n                (quizEntity.stars.toFloat() / 50)\r\n            else ratingBar.rating = (((quizEntity.stars.toFloat() - 100) / 20) + 2)\r\n\r\n            imvTranslate.setOnTouchListener { view, event ->\r\n                if (event.action == MotionEvent.ACTION_UP) {\r\n                    // Rating bar clicked, handle the event here\r\n                    // You can call your method to show the translation popup/dialog\r\n                    showPopupInfo(quizEntity, event, POPUP_TRANSLATE, viewModel)\r\n                }\r\n                true\r\n            }\r\n\r\n            ratingBar.setOnTouchListener { view, event ->\r\n                if (event.action == MotionEvent.ACTION_UP) {\r\n                    // Rating bar clicked, handle the event here\r\n                    // You can call your method to show the translation popup/dialog\r\n                    showPopupInfo(quizEntity, event, POPUP_STARS, viewModel)\r\n                }\r\n                true\r\n            }\r\n\r\n            mainTitleButton.text = quizEntity.nameQuiz\r\n\r\n            mainTitleButton.setOnClickListener {\r\n                listener.onClick(quizEntity.id!!, chbTypeQuiz.isChecked)\r\n            }/*\r\n            imvGradHardQuiz.setOnClickListener {\r\n                listener.onClick(quizEntity.id!!, chbTypeQuiz.isChecked)\r\n            }\r\n            imvGradLightQuiz.setOnClickListener {\r\n                listener.onClick(quizEntity.id!!, chbTypeQuiz.isChecked)\r\n            }\r\n            imvTranslate.setOnClickListener {\r\n                listener.onClick(quizEntity.id!!, chbTypeQuiz.isChecked)\r\n            }*/\r\n        }\r\n\r\n\r\n        @OptIn(InternalCoroutinesApi::class)\r\n        private fun showPopupInfo(\r\n            quizEntity: QuizEntity,\r\n            event: MotionEvent,\r\n            popupType: Int,\r\n            viewModel: MainActivityViewModel\r\n        ) {\r\n            val context = itemView.context\r\n            // Create the popup window\r\n            val inflater =\r\n                context.getSystemService(Context.LAYOUT_INFLATER_SERVICE) as LayoutInflater\r\n            val popupView = inflater.inflate(R.layout.translation_popup_layout, null)\r\n            val popupWindow = PopupWindow(\r\n                popupView,\r\n                ViewGroup.LayoutParams.WRAP_CONTENT,\r\n                ViewGroup.LayoutParams.WRAP_CONTENT,\r\n                true\r\n            )\r\n\r\n            // Configure the popup window\r\n            val tvPopup1 = popupView.findViewById<TextView>(R.id.tv_popup_1)\r\n            val tvPopup2 = popupView.findViewById<TextView>(R.id.tv_popup_2)\r\n            val tvPopup3 = popupView.findViewById<TextView>(R.id.tv_popup_3)\r\n            val tvPopup4 = popupView.findViewById<TextView>(R.id.tv_popup_4)\r\n            val tvPopup5 = popupView.findViewById<TextView>(R.id.tv_popup_5)\r\n            val tvPopup6 = popupView.findViewById<TextView>(R.id.tv_popup_6)\r\n            val tvPopup7 = popupView.findViewById<TextView>(R.id.tv_popup_7)\r\n            val tvPopup8 = popupView.findViewById<TextView>(R.id.tv_popup_8)\r\n            val tvPopup9 = popupView.findViewById<TextView>(R.id.tv_popup_9)\r\n            val spListPopup1 = popupView.findViewById<Spinner>(R.id.sp_list_popup_1)\r\n            val bPopup1 = popupView.findViewById<Button>(R.id.b_popup_1)\r\n            val layoutSp = popupView.findViewById<LinearLayout>(R.id.l_sp)\r\n            val layoutB = popupView.findViewById<LinearLayout>(R.id.l_b)\r\n\r\n            if (popupType == POPUP_TRANSLATE) {\r\n                tvPopup1.visibility = View.VISIBLE\r\n                spListPopup1.visibility = View.VISIBLE\r\n                bPopup1.visibility = View.VISIBLE\r\n\r\n                layoutB.visibility = View.VISIBLE\r\n                layoutSp.visibility = View.VISIBLE\r\n\r\n                tvPopup2.visibility = View.GONE\r\n                tvPopup3.visibility = View.GONE\r\n                tvPopup4.visibility = View.GONE\r\n                tvPopup5.visibility = View.GONE\r\n                tvPopup6.visibility = View.GONE\r\n                tvPopup7.visibility = View.GONE\r\n                tvPopup8.visibility = View.GONE\r\n                tvPopup9.visibility = View.GONE\r\n\r\n                bPopup1.setOnClickListener {\r\n                    // Perform translation logic here\r\n                    translateText(viewModel, context, quizEntity)\r\n                    popupWindow.dismiss()\r\n                }\r\n\r\n                val languageString = quizEntity.languages // Получите строку языков из quizEntity\r\n                val languageItems = languageString?.split(\"|\") // Разделите строку на элементы\r\n\r\n                val languageMap =\r\n                    mutableMapOf<String?, Int?>() // Создайте пустой Map для хранения соответствия язык-число\r\n\r\n                if (languageItems != null) {\r\n                    for (item in languageItems) {\r\n                        val parts = item.split(\"-\") // Разделите элемент на ключ и значение\r\n                        if (parts.size == 2) {\r\n                            val language = parts[0]\r\n                            val value = parts[1].toIntOrNull()\r\n                            if (value != null) {\r\n                                languageMap[language] = value // Добавьте соответствие язык-число в Map\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                val adapter = ArrayAdapter(\r\n                    context,\r\n                    android.R.layout.simple_spinner_item,\r\n                    languageMap.keys.toList()\r\n                )\r\n                adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)\r\n                log(\"festgfsdrgdrto,  $tvPopup1\")\r\n                try {\r\n                    tvPopup1.text = \"lvl: ${languageMap.values.toList()[0]}\"\r\n                } catch (e: Exception) {\r\n                    tvPopup1.text = \"Квест еще не переведен на ваш язык\"\r\n                }\r\n                spListPopup1.adapter = adapter\r\n                spListPopup1.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {\r\n                    override fun onItemSelected(\r\n                        parent: AdapterView<*>,\r\n                        view: View?,\r\n                        position: Int,\r\n                        id: Long\r\n                    ) {\r\n                        val selectedLanguage = spListPopup1.selectedItem.toString()\r\n                        val selectedValue = languageMap[selectedLanguage]\r\n                        if (selectedValue != null) {\r\n                            tvPopup1.text = selectedValue.toString()\r\n\r\n                        }\r\n                    }\r\n\r\n                    override fun onNothingSelected(parent: AdapterView<*>?) {\r\n                        // Обработайте случай, когда ничего не выбрано, если необходимо\r\n                    }\r\n                }\r\n            } else if (popupType == POPUP_STARS) {\r\n                tvPopup1.visibility = View.VISIBLE\r\n                tvPopup2.visibility = View.VISIBLE\r\n                tvPopup3.visibility = View.VISIBLE\r\n                tvPopup4.visibility = View.VISIBLE\r\n                tvPopup5.visibility = View.VISIBLE\r\n                tvPopup6.visibility = View.VISIBLE\r\n                tvPopup7.visibility = View.VISIBLE\r\n                tvPopup8.visibility = View.VISIBLE\r\n                tvPopup9.visibility = View.VISIBLE\r\n\r\n\r\n                layoutB.visibility = View.GONE\r\n                layoutSp.visibility = View.GONE\r\n\r\n                spListPopup1.visibility = View.GONE\r\n                bPopup1.visibility = View.GONE\r\n\r\n                tvPopup2.text = \"К-во легких вопросов: ${quizEntity.numQ}\"\r\n                tvPopup1.text = \"К-во сложных вопросов: ${quizEntity.numHQ}\"\r\n                tvPopup3.text = \"Дата создания: ${quizEntity.data}\"\r\n                tvPopup4.text = \"Рейтинг квеста: ${quizEntity.ratingPlayer}/3\"\r\n                tvPopup5.text = \"Ваш лучший результат: ${quizEntity.stars}/120\"\r\n                tvPopup6.text = \"Ваш средний результат: ${quizEntity.starsAll}/120\"\r\n                tvPopup7.text = \"Средний результат всх игроков: ${quizEntity.starsAllPlayer}/120\"\r\n                tvPopup8.text = \"Лучший результат всех игроков: ${quizEntity.starsPlayer}/120\"\r\n                tvPopup9.text = \"Версия квеста: ${quizEntity.versionQuiz}\"\r\n            }\r\n\r\n            popupView.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED)\r\n            val popupWidth = popupView.measuredWidth\r\n            val popupHeight = popupView.measuredHeight\r\n            val touchX = event.rawX\r\n            val touchY = event.rawY\r\n            popupWindow.width = popupWidth.toInt()\r\n            popupWindow.height = popupHeight\r\n            popupWindow.showAtLocation(\r\n                itemView,\r\n                Gravity.NO_GRAVITY,\r\n                touchX.toInt() + 16,\r\n                touchY.toInt() + 16\r\n            )\r\n        }\r\n\r\n        @OptIn(InternalCoroutinesApi::class)\r\n        private fun translateText(\r\n            viewModel: MainActivityViewModel,\r\n            context: Context,\r\n            quizEntity: QuizEntity\r\n        ) {\r\n            val questionList = viewModel.getQuestionListByIdQuiz(quizEntity.id!!)\r\n\r\n            log(\"dawdawdf $questionList, $adapterPosition\")\r\n            // Создаем мапу, где ключом будет numQuestion, а значением - элемент Question с наибольшим lvlTranslate\r\n            val questionMap: MutableMap<Int, QuestionEntity> = mutableMapOf()\r\n\r\n            for (question in questionList) {\r\n\r\n                log(\"dawdawdf $question\")\r\n                val existingQuestion = questionMap[question.numQuestion]\r\n\r\n                if (existingQuestion == null || question.lvlTranslate > existingQuestion.lvlTranslate) {\r\n                    log(\"dawdawdf add\")\r\n                    questionMap[question.numQuestion] = question\r\n                }\r\n            }\r\n\r\n            val filteredQuestionList: List<QuestionEntity> = questionMap.values.toList()\r\n            var i = filteredQuestionList.size\r\n            Thread {\r\n                translateToUserLanguage(filteredQuestionList).forEach {\r\n                    viewModel.insertQuestion(it)\r\n                    log(\"dawdawdf $i\")\r\n                    i--\r\n                    if (i == 0) context.runOnUiThread {\r\n                        viewModel.updateQuiz(\r\n                            quizEntity.copy(\r\n                                languages = removeDuplicateWordsFromLanguages(\r\n                                    if (quizEntity.languages.isNotEmpty()) \"${quizEntity.languages}|${Locale.getDefault().language}-100\"\r\n                                    else \"${Locale.getDefault().language}-100\"\r\n                                ), versionQuiz = quizEntity.versionQuiz + 1\r\n                            )\r\n                        )\r\n                        Toast.makeText(context, \"Перевод завершен успешно\", Toast.LENGTH_SHORT)\r\n                            .show()\r\n                    }\r\n                }\r\n            }.start()\r\n\r\n        }\r\n\r\n        private fun removeDuplicateWordsFromLanguages(input: String): String {\r\n            val languages = input.split(\"|\") // Разделение строки на отдельные языки\r\n            val uniqueLanguages =\r\n                languages.map { removeDuplicateWords(it) } // Удаление дубликатов слов для каждого языка\r\n            return uniqueLanguages.joinToString(\"|\") // Объединение языков обратно в строку\r\n        }\r\n\r\n        private fun removeDuplicateWords(input: String): String {\r\n            val words = input.split(\"-\")\r\n            val uniqueWords = words.distinct()\r\n            return uniqueWords.joinToString(\"-\")\r\n        }\r\n\r\n        private fun translateToUserLanguage(questionList: List<QuestionEntity>): List<QuestionEntity> {\r\n            // Инициализируем объект Translate с помощью ключа API\r\n            val translate: com.google.cloud.translate.Translate? = TranslateOptions.newBuilder()\r\n                .setApiKey(Secure.getTranslateKey())\r\n                .build()\r\n                .service\r\n\r\n            // Создаем пустой список для хранения переведенных вопросов\r\n            val translatedQuestionList: MutableList<QuestionEntity> = mutableListOf()\r\n\r\n            log(\"dawdawdf translateToUserLanguage\")\r\n            // Перебираем каждый вопрос в исходном списке и выполняем перевод\r\n            for (question in questionList) {\r\n                // Получаем текст для переводаы\r\n                val textToTranslate = question.nameQuestion\r\n                val sourceLanguage = question.language\r\n\r\n                val userLanguage: String = Locale.getDefault().language\r\n                var idQuestion: Int? = null\r\n\r\n                log(\"dawdawdf question $question\")\r\n                // Выполняем перевод\r\n                log(\"dawdawdf Thread\")\r\n                val translatedText = try {\r\n\r\n                    val translation: Translation = translate!!.translate(\r\n                        textToTranslate,\r\n                        com.google.cloud.translate.Translate.TranslateOption.sourceLanguage(\r\n                            sourceLanguage\r\n                        ),\r\n                        com.google.cloud.translate.Translate.TranslateOption.targetLanguage(\r\n                            userLanguage\r\n                        )\r\n                    )\r\n\r\n                    translation.translatedText\r\n                } catch (e: Exception) {\r\n                    idQuestion = question.id\r\n                    textToTranslate\r\n                }\r\n\r\n                val translatedQuestion = question.copy(\r\n                    id = idQuestion,\r\n                    nameQuestion = translatedText,\r\n                    language = userLanguage,\r\n                    lvlTranslate = 100,\r\n                    infoTranslater = \"0|0\"\r\n                )\r\n\r\n                translatedQuestionList.add(translatedQuestion)\r\n            }\r\n\r\n            return translatedQuestionList\r\n        }\r\n\r\n        companion object {\r\n            const val PERCENT_TWO_STARS = 0.83333\r\n            const val MAX_PERCENT = 100\r\n\r\n            fun create(parent: ViewGroup, listener: Listener): ItemHolder {\r\n                return ItemHolder(\r\n                    LayoutInflater.from(parent.context)\r\n                        .inflate(R.layout.activity_main_item, parent, false),\r\n                    listener\r\n                )\r\n            }\r\n        }\r\n\r\n        override fun onTouch(v: View?, event: MotionEvent?): Boolean {\r\n            return true\r\n        }\r\n    }\r\n\r\n    interface Listener {\r\n        fun deleteItem(id: Int)\r\n        fun onClick(id: Int, type: Boolean)\r\n        fun editItem(id: Int)\r\n        fun sendItem(id: Int)\r\n        fun reloadData()\r\n    }\r\n\r\n    companion object {\r\n        const val POPUP_TRANSLATE = 1\r\n        const val POPUP_STARS = 2\r\n        const val POPUP_LIFE = 3\r\n        const val POPUP_LIFE_GOLD = 4\r\n\r\n    }\r\n\r\n    @OptIn(InternalCoroutinesApi::class)\r\n    fun log(msg: String) {\r\n        Logcat.log(msg, \"MainActivityAdapter\", Logcat.LOG_ACTIVITY)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt b/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt
--- a/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt	(revision 72db302aa54204155043810a7cca6b56c86db7ae)
+++ b/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt	(date 1687280636739)
@@ -388,8 +388,12 @@
                 log("festgfsdrgdrto,  $tvPopup1")
                 try {
                     tvPopup1.text = "lvl: ${languageMap.values.toList()[0]}"
+                    binding.mainTitleButton.isClickable = true
+                    binding.mainTitleButton.isEnabled = true
                 } catch (e: Exception) {
                     tvPopup1.text = "Квест еще не переведен на ваш язык"
+                    binding.mainTitleButton.isClickable = false
+                    binding.mainTitleButton.isEnabled = false
                 }
                 spListPopup1.adapter = adapter
                 spListPopup1.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
Index: app/src/main/java/com/tpov/schoolquiz/presentation/question/QuestionActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tpov.schoolquiz.presentation.question\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.Activity\r\nimport android.app.ActivityOptions\r\nimport android.content.Intent\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.os.CountDownTimer\r\nimport android.util.Log\r\nimport android.view.*\r\nimport android.view.animation.Animation\r\nimport android.view.animation.AnimationUtils\r\nimport android.widget.*\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.dynamicanimation.animation.DynamicAnimation\r\nimport androidx.dynamicanimation.animation.SpringAnimation\r\nimport androidx.dynamicanimation.animation.SpringForce\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.tpov.schoolquiz.*\r\nimport com.tpov.schoolquiz.data.Services.MusicService\r\nimport com.tpov.schoolquiz.data.database.log\r\nimport com.tpov.schoolquiz.databinding.ActivityQuestionBinding\r\nimport com.tpov.schoolquiz.presentation.MainApp\r\nimport com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager.getTpovId\r\nimport com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager.updateProfile\r\nimport com.tpov.schoolquiz.presentation.factory.ViewModelFactory\r\nimport kotlinx.android.synthetic.main.activity_question.*\r\nimport kotlinx.coroutines.InternalCoroutinesApi\r\nimport javax.inject.Inject\r\nimport kotlin.math.floor\r\n\r\nprivate const val REQUEST_CODE_CHEAT = 0\r\n\r\n/**\r\n * This activity contains many variables that are needed to restore the session and the information processing logic.\r\n * High WTF/min\r\n * Refractoring incomplete\r\n * First, there is a check to see if the quest that the player wants to complete is not completed, if not,\r\n * then he goes through it from the beginning.\r\n * To save the session, many variables and encodings are used that are made from objects in one line,\r\n * this allows you to have the entire progress of the passage, save it and restore it.\r\n */\r\n@InternalCoroutinesApi\r\nclass QuestionActivity : AppCompatActivity() {\r\n\r\n    lateinit var viewModel: QuestionViewModel\r\n\r\n    @Inject\r\n    lateinit var viewModelFactory: ViewModelFactory\r\n\r\n    private val binding by lazy {\r\n        ActivityQuestionBinding.inflate(layoutInflater)\r\n    }\r\n    private val component by lazy {\r\n        (application as MainApp).component\r\n    }\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        component.inject(this)\r\n        super.onCreate(savedInstanceState)\r\n\r\n        updateProfile = false\r\n        setContentView(binding.root)\r\n        viewModel = ViewModelProvider(this, viewModelFactory)[QuestionViewModel::class.java]\r\n        window.addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON)\r\n\r\n        synthInputData()\r\n        viewModel.synthWithDB(this)\r\n        viewModel.shouldCloseLiveData.observe(this) {\r\n            if (it == RESULT_TRANSLATE || it == RESULT_OK) {\r\n                val resultIntent = Intent()\r\n                resultIntent.putExtra(\"translate\", it == RESULT_TRANSLATE)\r\n                resultIntent.putExtra(\"idQuiz\", viewModel.idQuiz)\r\n\r\n                setResult(Activity.RESULT_OK, resultIntent)\r\n                finish()\r\n            }\r\n        }\r\n\r\n        insertQuestionsNewEvent()\r\n        binding.apply {\r\n            if (viewModel.hardQuestion) {\r\n                cheatButton.visibility = View.GONE\r\n            }\r\n\r\n            trueButton.setOnClickListener {\r\n                nextButton()\r\n                viewModel.trueButton()\r\n                setStateTimer(true)\r\n                setVisibleButtonsNext()\r\n            }\r\n\r\n            falseButton.setOnClickListener {\r\n                nextButton()\r\n                viewModel.falseButton()\r\n                setStateTimer(true)\r\n                setVisibleButtonsNext()\r\n\r\n            }\r\n\r\n            cheatButton.setOnClickListener { view ->\r\n                val answerIsTrue = viewModel.questionListThis[viewModel.currentIndex].answerQuestion\r\n                val intent = CheatActivity.newIntent(this@QuestionActivity, answerIsTrue)\r\n\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    val options =\r\n                        ActivityOptions.makeClipRevealAnimation(view, 0, 0, view.width, view.height)\r\n                    startActivityForResult(intent, REQUEST_CODE_CHEAT, options.toBundle())\r\n                } else {\r\n                    startActivityForResult(intent, REQUEST_CODE_CHEAT)\r\n                }\r\n            }\r\n\r\n\r\n            tv_pref.setOnClickListener {\r\n                setVisibleButtonsPref()\r\n                prefButton()\r\n            }\r\n            tv_next.setOnClickListener {\r\n                setVisibleButtonsNext()\r\n                nextButton()\r\n            }\r\n\r\n            log(\"DSEFSE, currentIndex: ${viewModel.currentIndex}\")\r\n            log(\"DSEFSE, nameQuestion: ${viewModel.questionListThis}\")\r\n\r\n            try {\r\n                binding.questionTextView.text =\r\n                    viewModel.questionListThis[viewModel.currentIndex].nameQuestion\r\n            } catch (e: Exception) {\r\n                Toast.makeText(this@QuestionActivity, \"Вопросы не были загружены, возможно произошла ошибка\", Toast.LENGTH_LONG).show()\r\n            }\r\n        }\r\n        actionBarSettings()\r\n        startService(Intent(this, MusicService::class.java))\r\n        startTimer()\r\n        visibleCheatButton(viewModel.hardQuestion)\r\n    }\r\n\r\n    private fun synthInputData() {\r\n        viewModel.userName = intent.getStringExtra(NAME_USER) ?: \"user\"\r\n        viewModel.idQuiz = intent.getIntExtra(ID_QUIZ, 0)\r\n        viewModel.hardQuestion = intent.getBooleanExtra(HARD_QUESTION, false)\r\n        log(\"fun synthInputData userName: ${viewModel.userName}, idQuiz: ${viewModel.idQuiz}, hardQuestion: ${viewModel.hardQuestion}\")\r\n        if (!viewModel.hardQuestion) binding.viewBackground.background = getDrawable(R.mipmap.back_question_light)\r\n        else binding.viewBackground.background = getDrawable(R.mipmap.back_question_hard)\r\n    }\r\n\r\n    private fun prefButton() {\r\n        if (viewModel.currentIndex == 0) springAnim(false)\r\n        else moveToPref()\r\n    }\r\n\r\n    private fun nextButton() {\r\n        if (viewModel.currentIndex == viewModel.numQuestion - 1) springAnim(true)\r\n        else moveToNext()\r\n    }\r\n\r\n    private fun setStateTimer(nextQuestion: Boolean) {\r\n\r\n        try {\r\n            if (nextQuestion) {\r\n                log(\"setStateTimer currentIndex + 1: ${viewModel.codeAnswer[viewModel.currentIndex + 1]}\")\r\n\r\n                if (viewModel.codeAnswer[viewModel.currentIndex + 1] == '0') {\r\n                    startTimer()\r\n                } else viewModel.timer?.cancel()\r\n\r\n            } else {\r\n                if (viewModel.codeAnswer[viewModel.currentIndex - 1] == '0') {\r\n\r\n                    log(\"setStateTimer currentIndex - 1: ${viewModel.codeAnswer[viewModel.currentIndex - 1]}\")\r\n                    startTimer()\r\n                } else viewModel.timer?.cancel()\r\n            }\r\n        } catch (e: Exception) {\r\n            viewModel.timer?.cancel()\r\n        }\r\n    }\r\n\r\n    private fun startTimer() {\r\n        viewModel.timer?.cancel()\r\n        viewModel.timer = object : CountDownTimer(\r\n            viewModel.getCurrentTimer(viewModel.hardQuestion) * QuestionViewModel.MILLIS_IN_SECONDS,\r\n            QuestionViewModel.MILLIS_IN_SECONDS\r\n        ) {\r\n            override fun onTick(millisUntilFinished: Long) {\r\n                binding.tvTimer.text = viewModel.formatTime(millisUntilFinished)\r\n                if (viewModel.formatTime(millisUntilFinished)[3] == '0' && viewModel.formatTime(\r\n                        millisUntilFinished\r\n                    )[4] == '3'\r\n                ) anim321(3) //Анимация для цифры 3\r\n                if (viewModel.formatTime(millisUntilFinished)[3] == '0' && viewModel.formatTime(\r\n                        millisUntilFinished\r\n                    )[4] == '2'\r\n                ) anim321(2) //2\r\n                if (viewModel.formatTime(millisUntilFinished)[3] == '0' && viewModel.formatTime(\r\n                        millisUntilFinished\r\n                    )[4] == '1'\r\n                ) anim321(1) //1\r\n            }\r\n\r\n            override fun onFinish() {\r\n                if ((Math.random() * 2).toInt() > 1) {\r\n                    setStateTimer(true)\r\n                    setVisibleButtonsNext()\r\n                    viewModel.trueButton()\r\n                } else {\r\n                    setStateTimer(false)\r\n                    setVisibleButtonsNext()\r\n                    viewModel.falseButton()\r\n                }\r\n            }\r\n        }\r\n        viewModel.timer?.start()\r\n    }\r\n\r\n    private fun setVisibleButtonsNext() { //Стоит учитывать, что в момент вызова этой функции пользователь находится все еще на том вопросе\r\n\r\n\r\n    }\r\n\r\n    private fun setVisibleButtonsPref() {\r\n        setBlockButton(viewModel.codeAnswer[viewModel.currentIndex - 1] == '0')\r\n    }\r\n\r\n    private fun visibleCheatButton(it: Boolean) {\r\n        binding.cheatButton.isClickable = it\r\n        binding.cheatButton.isEnabled = it\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        stopService(Intent(this, MusicService::class.java))\r\n    }\r\n\r\n\r\n    override fun onCreateOptionsMenu(menu: Menu?): Boolean {\r\n        menuInflater.inflate(R.menu.menu_main_activity, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        when (item.itemId) {\r\n            android.R.id.home -> finish()\r\n\r\n            R.id.item_list_answer -> {\r\n                if (!viewModel.hardQuestion) {\r\n                    val questionActivityIntent = Intent(this, QuestionListActivity::class.java)\r\n\r\n                    ActivityOptions.makeClipRevealAnimation(\r\n                        View(this),\r\n                        0,\r\n                        0,\r\n                        View(this).width,\r\n                        View(this).height\r\n                    )\r\n\r\n                    questionActivityIntent.putExtra(\r\n                        EXTRA_CURRENT_INDEX,\r\n                        viewModel.currentIndex\r\n                    )   //Output\r\n                    questionActivityIntent.putExtra(EXTRA_CODE_ANSWER, viewModel.codeAnswer)\r\n                    questionActivityIntent.putExtra(EXTRA_CODE_ID_USER, viewModel.idQuiz)\r\n                    startActivityForResult(questionActivityIntent, UPDATE_CURRENT_INDEX)\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    private fun insertQuestionsNewEvent() {\r\n\r\n        viewModel.getQuizLiveDataUseCase.getQuizUseCase(viewModel.tpovId.toInt())\r\n            .observe(this@QuestionActivity) { list ->\r\n\r\n                list.forEach { quiz ->\r\n\r\n                    if (viewModel.getQuestionByIdQuizUseCase(quiz.id!!).isNullOrEmpty()) {\r\n                        viewModel.getQuestionByIdQuizUseCase(quiz.id!!).forEach {\r\n                            viewModel.insertQuestionUseCase(it.copy(id = null, idQuiz = quiz.id!!))\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    }\r\n\r\n    private fun springAnim(next: Boolean) = with(binding) {\r\n        val START_VELOCITY = if (next) - 5000f\r\n        else 5000f\r\n\r\n        var springAnimation = SpringAnimation(questionTextView, DynamicAnimation.X)\r\n        var springForce = SpringForce()\r\n        springForce.finalPosition = questionTextView.x\r\n        springForce.dampingRatio = SpringForce.DAMPING_RATIO_HIGH_BOUNCY\r\n        springForce.stiffness = SpringForce.STIFFNESS_HIGH\r\n\r\n        springAnimation.spring = springForce\r\n        springAnimation.setStartVelocity(START_VELOCITY)\r\n        springAnimation.start()\r\n    }\r\n\r\n    private fun actionBarSettings() {       //Кнопка назад в баре\r\n        val ab = supportActionBar\r\n        ab?.setDisplayHomeAsUpEnabled(true)\r\n    }\r\n\r\n    @SuppressLint(\"ResourceType\")\r\n    private fun anim321(num: Int) = with(binding) {\r\n        tv321.text = num.toString()\r\n\r\n        var anim = AnimationUtils.loadAnimation(this@QuestionActivity, R.anim.time_3_2_1)\r\n        anim.setAnimationListener(object : Animation.AnimationListener {\r\n            override fun onAnimationStart(p0: Animation?) {\r\n                tv321.visibility = View.VISIBLE\r\n            }\r\n\r\n            override fun onAnimationEnd(p0: Animation?) {\r\n                tv321.visibility = View.GONE\r\n            }\r\n\r\n            override fun onAnimationRepeat(p0: Animation?) {\r\n            }\r\n        })\r\n        tv321.startAnimation(anim)\r\n    }\r\n\r\n    @Deprecated(\"Deprecated in Java\")\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n        if (data == null) {\r\n            return\r\n        }\r\n        if (requestCode == REQUEST_CODE_CHEAT) {\r\n\r\n                    if (data.getBooleanExtra(\r\n                            EXTRA_ANSWER_SHOW,\r\n                            false\r\n                        )\r\n                    ) viewModel.updateProfileUseCase(\r\n                        viewModel.getProfileUseCase(getTpovId()).copy(\r\n                            countLife = viewModel.getProfileUseCase(\r\n                                getTpovId()\r\n                            ).countLife\r\n                        )\r\n                    )\r\n        } else if (requestCode == UPDATE_CURRENT_INDEX) {\r\n            viewModel.currentIndex = data.getIntExtra(EXTRA_UPDATE_CURRENT_INDEX, 0)\r\n\r\n            //Идея такая, после того как пользователь выбрал любой квест, мы этот выбор пытаемся сделать эквиваленту нажатия на кнопки вперед или назад\r\n            if (data.getIntExtra(EXTRA_UPDATE_CURRENT_INDEX, 0) > viewModel.currentIndex) {\r\n                viewModel.currentIndex = data.getIntExtra(EXTRA_UPDATE_CURRENT_INDEX, 0) - 1\r\n                setVisibleButtonsNext()\r\n                setStateTimer(true)\r\n                nextButton()\r\n\r\n            } else {\r\n                viewModel.currentIndex = data.getIntExtra(EXTRA_UPDATE_CURRENT_INDEX, 0) + 1\r\n                setVisibleButtonsPref()\r\n                setStateTimer(false)\r\n                prefButton()\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setBlockButton(state: Boolean) = with(binding) {\r\n        falseButton.isEnabled = state\r\n        falseButton.isClickable = state\r\n        trueButton.isEnabled = state\r\n        trueButton.isClickable = state\r\n    }\r\n\r\n    //Тут уже обновленные параметры\r\n    fun updateTextQuestion() {\r\n        updateDataView()\r\n        binding.questionTextView.text =\r\n            viewModel.questionListThis[viewModel.currentIndex].nameQuestion\r\n    }\r\n\r\n    private fun updateDataView() {\r\n        binding.tvPercent.text = (viewModel.persent).toString()\r\n        binding.tvPointsLife.text = (floor(\r\n            viewModel.getProfileUseCase(getTpovId()).count?.toDouble()?.div(1000.0) ?: 0.0\r\n        )).toInt().toString()\r\n        binding.tvPointsGoldLife.text = (floor(\r\n            viewModel.getProfileUseCase(getTpovId()).countGold?.toDouble()?.div(1000.0) ?: 0.0\r\n        )).toInt().toString()\r\n\r\n    }\r\n\r\n    private fun moveToPref() = with(binding) {\r\n\r\n        var animPref1 =\r\n            AnimationUtils.loadAnimation(this@QuestionActivity, R.anim.pref_question1)\r\n        var animPref2 =\r\n            AnimationUtils.loadAnimation(this@QuestionActivity, R.anim.pref_question2)\r\n\r\n        animPref1.setAnimationListener(object : Animation.AnimationListener {\r\n            override fun onAnimationStart(p0: Animation?) {\r\n                //todo сделать все кнопки что-бы нельзя их нажать\r\n            }\r\n\r\n            override fun onAnimationEnd(p0: Animation?) {\r\n                questionTextView.visibility = View.GONE\r\n                viewModel.currentIndex = (viewModel.currentIndex - 1) % viewModel.numQuestion!!\r\n                updateTextQuestion()\r\n\r\n                questionTextView.startAnimation(animPref2)\r\n            }\r\n\r\n            override fun onAnimationRepeat(p0: Animation?) {\r\n\r\n            }\r\n        })\r\n\r\n        animPref2.setAnimationListener(object : Animation.AnimationListener {\r\n            override fun onAnimationStart(p0: Animation?) {\r\n                questionTextView.visibility = View.VISIBLE\r\n            }\r\n\r\n            override fun onAnimationEnd(p0: Animation?) {\r\n                setBlockButton(viewModel.codeAnswer[viewModel.currentIndex] == '0')\r\n\r\n                //todo освободить кнопки\r\n            }\r\n\r\n            override fun onAnimationRepeat(p0: Animation?) {\r\n\r\n            }\r\n        })\r\n        questionTextView.startAnimation(animPref1)\r\n    }\r\n\r\n    private fun moveToNext() {\r\n        var animNext1 = AnimationUtils.loadAnimation(this, R.anim.next_question1)\r\n        var animNext2 = AnimationUtils.loadAnimation(this, R.anim.next_question2)\r\n\r\n        animNext1.setAnimationListener(object : Animation.AnimationListener {\r\n            override fun onAnimationStart(p0: Animation?) {\r\n                //todo сделать все кнопки что-бы нельзя их нажать\r\n            }\r\n\r\n            override fun onAnimationEnd(p0: Animation?) {\r\n                binding.questionTextView.visibility = View.GONE\r\n\r\n                Log.d(\r\n                    \"dawdasd\",\r\n                    \"questionListThis: ${viewModel.currentIndex + 1}, ${viewModel.numQuestion}\"\r\n                )\r\n                viewModel.currentIndex++\r\n                updateTextQuestion()\r\n\r\n                binding.questionTextView.startAnimation(animNext2)\r\n            }\r\n\r\n            override fun onAnimationRepeat(p0: Animation?) {\r\n\r\n            }\r\n        })\r\n\r\n        animNext2.setAnimationListener(object : Animation.AnimationListener {\r\n            override fun onAnimationStart(p0: Animation?) {\r\n                binding.questionTextView.visibility = View.VISIBLE\r\n            }\r\n\r\n            override fun onAnimationEnd(p0: Animation?) {\r\n                setBlockButton(viewModel.codeAnswer[viewModel.currentIndex] == '0')\r\n\r\n                //todo освободить кнопки\r\n            }\r\n\r\n            override fun onAnimationRepeat(p0: Animation?) {\r\n\r\n            }\r\n        })\r\n        binding.questionTextView.startAnimation(animNext1)\r\n    }\r\n\r\n    companion object {\r\n        const val ID_QUIZ = \"name_question\"\r\n        const val NAME_USER = \"name_user\"\r\n        const val HARD_QUESTION = \"hard_question\"\r\n        const val STARS = \"stars\"\r\n        const val UPDATE_CURRENT_INDEX = 1\r\n        const val RESULT_TRANSLATE = 2\r\n        const val RESULT_OK = 1\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tpov/schoolquiz/presentation/question/QuestionActivity.kt b/app/src/main/java/com/tpov/schoolquiz/presentation/question/QuestionActivity.kt
--- a/app/src/main/java/com/tpov/schoolquiz/presentation/question/QuestionActivity.kt	(revision 72db302aa54204155043810a7cca6b56c86db7ae)
+++ b/app/src/main/java/com/tpov/schoolquiz/presentation/question/QuestionActivity.kt	(date 1687279671380)
@@ -4,9 +4,13 @@
 import android.app.Activity
 import android.app.ActivityOptions
 import android.content.Intent
+import android.graphics.Color
 import android.os.Build
 import android.os.Bundle
 import android.os.CountDownTimer
+import android.text.Spannable
+import android.text.SpannableStringBuilder
+import android.text.style.ForegroundColorSpan
 import android.util.Log
 import android.view.*
 import android.view.animation.Animation
@@ -26,7 +30,7 @@
 import com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager.updateProfile
 import com.tpov.schoolquiz.presentation.factory.ViewModelFactory
 import kotlinx.android.synthetic.main.activity_question.*
-import kotlinx.coroutines.InternalCoroutinesApi
+import kotlinx.coroutines.*
 import javax.inject.Inject
 import kotlin.math.floor
 
@@ -126,8 +130,7 @@
             log("DSEFSE, nameQuestion: ${viewModel.questionListThis}")
 
             try {
-                binding.questionTextView.text =
-                    viewModel.questionListThis[viewModel.currentIndex].nameQuestion
+                showTextWithDelay( binding.questionTextView, viewModel.questionListThis[viewModel.currentIndex].nameQuestion, 50)
             } catch (e: Exception) {
                 Toast.makeText(this@QuestionActivity, "Вопросы не были загружены, возможно произошла ошибка", Toast.LENGTH_LONG).show()
             }
@@ -138,6 +141,32 @@
         visibleCheatButton(viewModel.hardQuestion)
     }
 
+    private fun showTextWithDelay(textView: TextView, text: String, delayInMillis: Long) {
+        CoroutineScope(Dispatchers.Main).launch {
+            val spannableText = SpannableStringBuilder()
+            for (char in text) {
+                val start = spannableText.length
+                spannableText.append(char.toString())
+                spannableText.setSpan(
+                    ForegroundColorSpan(Color.WHITE),
+                    start,
+                    start + 1,
+                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
+                )
+                textView.text = spannableText
+                delay(delayInMillis)
+
+                // Возвращаем цвет буквы к исходному (черный в данном случае)
+                spannableText.setSpan(
+                    ForegroundColorSpan(Color.BLACK),
+                    start,
+                    start + 1,
+                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
+                )
+                textView.text = spannableText
+            }
+        }
+    }
     private fun synthInputData() {
         viewModel.userName = intent.getStringExtra(NAME_USER) ?: "user"
         viewModel.idQuiz = intent.getIntExtra(ID_QUIZ, 0)
Index: local.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## This file must *NOT* be checked into Version Control Systems,\r\n# as it contains information specific to your local configuration.\r\n#\r\n# Location of the SDK. This is only used by Gradle.\r\n# For customization when using a Version Control System, please read the\r\n# header note.\r\n#Tue Jun 20 13:25:32 EEST 2023\r\nsdk.dir=C\\:\\\\Users\\\\ovasilenko\\\\AppData\\\\Local\\\\Android\\\\Sdk\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/local.properties b/local.properties
--- a/local.properties	(revision 72db302aa54204155043810a7cca6b56c86db7ae)
+++ b/local.properties	(date 1687279679227)
@@ -4,5 +4,5 @@
 # Location of the SDK. This is only used by Gradle.
 # For customization when using a Version Control System, please read the
 # header note.
-#Tue Jun 20 13:25:32 EEST 2023
-sdk.dir=C\:\\Users\\ovasilenko\\AppData\\Local\\Android\\Sdk
+#Tue Jun 20 19:47:59 EEST 2023
+sdk.dir=C\:\\Users\\oleg1\\AppData\\Local\\Android\\Sdk
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config>\r\n        <device id=\"_device_class_foldable\" />\r\n        <device id=\"_device_class_phone\" />\r\n        <device id=\"_device_class_desktop\" />\r\n        <locale>uk</locale>\r\n        <target>android-33-ext4</target>\r\n      </config>\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5af0db75-4be5-4ef3-8f7e-967bab06300d\" name=\"Changes\" comment=\"Edit backgrounf create new quiz\">\r\n      <change afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/domain/DeleteQuestionUseCase.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/data/RepositoryDBImpl.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/data/RepositoryDBImpl.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/data/database/QuizDao.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/data/database/QuizDao.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/domain/repository/RepositoryDB.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/domain/repository/RepositoryDB.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/dialog/CreateQuestionDialog.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/dialog/CreateQuestionDialog.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/network/event/EventViewModel.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/network/event/EventViewModel.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/network/event/TranslateQuestionFragment.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/network/event/TranslateQuestionFragment.kt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[17e6bcfc]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$/app\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"schoolquiz\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"schoolquiz\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"schoolquiz\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n              </path>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"schoolquiz\" type=\"f1a62948:ProjectNode\" />\r\n                <item name=\"app\" type=\"2d1252cf:ModuleNode\" />\r\n                <item name=\"Tasks\" type=\"e4a08cd1:TasksNode\" />\r\n                <item name=\"other\" type=\"c8890929:TasksNode$1\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"valueResourceFile\" />\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"Kotlin Object\" />\r\n        <option value=\"resourceFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GenerateSignedApkSettings\">\r\n    <option name=\"BUILD_TARGET_KEY\" value=\"apk\" />\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/merge_cocoutines\" />\r\n  </component>\r\n  <component name=\"Git.Rebase.Settings\">\r\n    <option name=\"NEW_BASE\" value=\"alfa/schoolquiz3.0\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Oleg &lt;oleg12794@gmail.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"11f385e69b6cbc1925b205275eb8c5c663b96840\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"GithubProjectSettings\">\r\n    <option name=\"branchProtectionPatterns\">\r\n      <list>\r\n        <option value=\"master\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MdM8qyqboV1nJrQXz70kLiA3XM\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"PROJECT_TRUSTED_KEY\": \"true\",\r\n    \"android-custom-viewC:/Users/ovasilenko/AppData/Local/Android/Sdk/sources/android-33/android/view/ViewGroup.java_SELECTED\": \"ViewGroup\",\r\n    \"last_opened_file_path\": \"E:/SchoolQuiz/app/src/main/res/drawable\",\r\n    \"project.structure.last.edited\": \"SDK Location\",\r\n    \"project.structure.proportion\": \"0.17\",\r\n    \"project.structure.side.proportion\": \"0.0\"\r\n  }\r\n}]]></component>\r\n  <component name=\"PsdUISettings\">\r\n    <option name=\"MODULE_TAB\" value=\"Properties\" />\r\n    <option name=\"LAST_EDITED_BUILD_TYPE\" value=\"release\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\SchoolQuiz\\app\\src\\main\\res\\drawable\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable-hdpi\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable-mdpi\" />\r\n      <recent name=\"E:\\SchoolQuiz\\app\\src\\main\\res\\mipmap-hdpi\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable-hdpi\" />\r\n      <recent name=\"E:\\SchoolQuiz\\app\\src\\main\\res\\back_main\" />\r\n      <recent name=\"E:\\SchoolQuiz\\app\\src\\main\\res\\mipmap-hdpi\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable-mdpi\" />\r\n    </key>\r\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\r\n      <recent name=\"com.tpov.schoolquiz.secure\" />\r\n      <recent name=\"com.tpov.schoolquiz.presentation.network.event\" />\r\n    </key>\r\n    <key name=\"CopyKotlinDeclarationDialog.RECENTS_KEY\">\r\n      <recent name=\"com.tpov.schoolquiz.domain\" />\r\n      <recent name=\"com.tpov.schoolquiz.presentation.network.arena\" />\r\n      <recent name=\"com.tpov.schoolquiz.presentation.network.event\" />\r\n      <recent name=\"com.tpov.schoolquiz.data.fierbase\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"schoolquiz.app.main\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"INSPECTION_WITHOUT_ACTIVITY_RESTART\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Hybrid>\r\n      <Java />\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5af0db75-4be5-4ef3-8f7e-967bab06300d\" name=\"Changes\" comment=\"\" />\r\n      <created>1678092861294</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1678092861294</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"build\">\r\n      <created>1680408918363</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680408918363</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fix build\">\r\n      <created>1680435462178</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680435462178</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fix event adapter\">\r\n      <created>1680449661463</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680449661463</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"create logcat custom\">\r\n      <created>1680493508899</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680493508899</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Refactoring repository FB&#10;fix synth data\">\r\n      <created>1680706876046</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680706876046</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"fix load quiz\">\r\n      <created>1680773588658</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680773588658</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"fix questionActivity\">\r\n      <created>1680779736038</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680779736038</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Fix get question detail\">\r\n      <created>1680928726440</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680928726440</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Fix get question detail\">\r\n      <created>1680977705498</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680977705498</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"add 2event -&gt; 3event\">\r\n      <created>1681047372984</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681047372984</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fix create question (number = 0)&#10;fix synth server\">\r\n      <created>1681051869138</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681051869138</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"create chat\">\r\n      <created>1681137571296</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681137571296</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"edit sort chat\">\r\n      <created>1681185211864</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681185211864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"fix setEvent quiz\">\r\n      <created>1681186958854</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681186958854</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"edit autoswipe chat\">\r\n      <created>1681207294559</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681207294559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Edit registration fragment (delete to 2 path)\">\r\n      <created>1681221696668</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681221696668</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"create main list quiz and home list quiz\">\r\n      <created>1681376434409</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681376434409</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"edit merge front fragment - arena fragment\">\r\n      <created>1681471483540</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681471483540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Create setting and info\">\r\n      <created>1681725319556</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681725319556</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"fix main images\">\r\n      <created>1681982264179</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681982264179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"fix main images\">\r\n      <created>1681982665577</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681982665577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"fix main images (center gravity)\">\r\n      <created>1681984258945</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681984258945</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"fix main images (center gravity)\">\r\n      <created>1681984507809</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681984507809</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"fix main images (center gravity)&#10;fix questionActivity &lt;- question8\">\r\n      <created>1681988419524</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681988419524</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"fix main images (center gravity)&#10;fix questionActivity &lt;- question8\">\r\n      <created>1681996293308</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681996293308</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"fix timer\">\r\n      <created>1682359780573</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682359780573</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"fix timer\">\r\n      <created>1682620234799</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682620234799</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Create create question dialog\">\r\n      <created>1682950533561</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682950533561</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"add create question\">\r\n      <created>1683196789093</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683196789093</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Delete swipe item question&#10;Add swipe menu\">\r\n      <created>1683267960195</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683267960195</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Fix create acc\">\r\n      <created>1683954831933</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683954831933</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"Fix create question not acc\">\r\n      <created>1683959805715</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683959805715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"Fix synth life with FB&#10;Fix adds nolics in MainActivity\">\r\n      <created>1684505932256</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684505932256</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Edit setQuiz5, sort quiz5\">\r\n      <created>1685125505095</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685125505096</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"Edit setQuiz5, sort quiz5&#10;Delete question day&#10;Fix time format&#10;Edit translate &#10;Add detect language\">\r\n      <created>1685383661332</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685383661332</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"Merge\">\r\n      <created>1685432222909</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685432222909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"Edit Design question activity&#10;Create background image\">\r\n      <created>1685444849867</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685444849867</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"Fix translate create double question&#10;Create get, set translate FB question\">\r\n      <created>1685457719356</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685457719356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"Fix translate create double question&#10;Create get, set translate FB question\">\r\n      <created>1685458972467</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685458972467</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"Create search in quiz5&#10;Edit addQuiz icon in quiz1&#10;Create anim text chat\">\r\n      <created>1685545059889</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685545059889</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"Fix set number box day\">\r\n      <created>1686041335363</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686041335363</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"Edit backgrounf create new quiz\">\r\n      <created>1687263276446</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687263276446</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"43\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"UnknownFeatures\">\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.reactivex.rxjava2:rxjava\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.google.protobuf:protobuf-java\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.grpc:grpc-api\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/schoolquiz\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"fix main images (center gravity)&#10;fix questionActivity &lt;- question8\" />\r\n    <MESSAGE value=\"Edit MainItem (translate, checkbox)\" />\r\n    <MESSAGE value=\"Add animation mainActivity\" />\r\n    <MESSAGE value=\"fix timer\" />\r\n    <MESSAGE value=\"Create create question dialog\" />\r\n    <MESSAGE value=\"add create question\" />\r\n    <MESSAGE value=\"Delete swipe item question\" />\r\n    <MESSAGE value=\"Delete swipe item question&#10;Add swipe menu\" />\r\n    <MESSAGE value=\"Edit edit quiz (show item menu)\" />\r\n    <MESSAGE value=\"Fix create acc\" />\r\n    <MESSAGE value=\"Fix create question not acc\" />\r\n    <MESSAGE value=\"Hotfix crash ended quiz in 0 percent&#10;Fix new Id create quiz\" />\r\n    <MESSAGE value=\"Edit setQuiz5, sort quiz5\" />\r\n    <MESSAGE value=\"Edit setQuiz5, sort quiz5&#10;Delete question day&#10;Fix time format&#10;Edit translate\" />\r\n    <MESSAGE value=\"Edit setQuiz5, sort quiz5&#10;Delete question day&#10;Fix time format&#10;Edit translate &#10;Add detect language\" />\r\n    <MESSAGE value=\"Merge\" />\r\n    <MESSAGE value=\"Edit Design question activity&#10;Create background image\" />\r\n    <MESSAGE value=\"Fix translate create double question&#10;Create get, set translate FB question\" />\r\n    <MESSAGE value=\"Create search in quiz5\" />\r\n    <MESSAGE value=\"Create search in quiz5&#10;Edit addQuiz icon in quiz1&#10;Create anim text chat\" />\r\n    <MESSAGE value=\"Fix set number box day\" />\r\n    <MESSAGE value=\"Create popup menu info main item\" />\r\n    <MESSAGE value=\"Create translate with event translate\" />\r\n    <MESSAGE value=\"Create translate with event translate&#10;Edit numQuestion in item main activity\" />\r\n    <MESSAGE value=\"Edit backgrounf create new quiz\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Edit backgrounf create new quiz\" />\r\n    <option name=\"OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 72db302aa54204155043810a7cca6b56c86db7ae)
+++ b/.idea/workspace.xml	(date 1687280821115)
@@ -7,6 +7,7 @@
         <device id="_device_class_phone" />
         <device id="_device_class_desktop" />
         <locale>uk</locale>
+        <option name="nonWearDeviceLastStateName" value="portrait" />
         <target>android-33-ext4</target>
       </config>
     </shared>
@@ -15,21 +16,19 @@
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="5af0db75-4be5-4ef3-8f7e-967bab06300d" name="Changes" comment="Edit backgrounf create new quiz">
-      <change afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/domain/DeleteQuestionUseCase.kt" afterDir="false" />
+    <list default="true" id="5af0db75-4be5-4ef3-8f7e-967bab06300d" name="Changes" comment="Create translate with event translate&#10;Edit numQuestion in item main activity">
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/fileHashes/resourceHashesCache.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/data/RepositoryDBImpl.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/data/RepositoryDBImpl.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/data/database/QuizDao.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/data/database/QuizDao.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/domain/repository/RepositoryDB.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/domain/repository/RepositoryDB.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/dialog/CreateQuestionDialog.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/dialog/CreateQuestionDialog.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/network/event/EventViewModel.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/network/event/EventViewModel.kt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/network/event/TranslateQuestionFragment.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/network/event/TranslateQuestionFragment.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/question/QuestionActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/question/QuestionActivity.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/local.properties" beforeDir="false" afterPath="$PROJECT_DIR$/local.properties" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -143,27 +142,32 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "PROJECT_TRUSTED_KEY": "true",
-    "android-custom-viewC:/Users/ovasilenko/AppData/Local/Android/Sdk/sources/android-33/android/view/ViewGroup.java_SELECTED": "ViewGroup",
-    "last_opened_file_path": "E:/SchoolQuiz/app/src/main/res/drawable",
-    "project.structure.last.edited": "SDK Location",
-    "project.structure.proportion": "0.17",
-    "project.structure.side.proportion": "0.0"
-  }
-}]]></component>
+  <component name="PropertiesComponent">
+    <property name="ApkExportedModule" value="schoolquiz.app" />
+    <property name="PROJECT_TRUSTED_KEY" value="true" />
+    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
+    <property name="android-custom-viewC:/Users/oleg1/.gradle/caches/modules-2/files-2.1/androidx.recyclerview/recyclerview/1.1.0/f2bdf79e1977939817f54a9d3e2f6bc52b63bdd0/recyclerview-1.1.0-sources.jar!/androidx/recyclerview/widget/RecyclerView.java_SELECTED" value="RecyclerView" />
+    <property name="android-custom-viewC:/Users/oleg1/AppData/Local/Android/Sdk/sources/android-33/android/view/View.java_SELECTED" value="View" />
+    <property name="android-custom-viewC:/Users/oleg1/AppData/Local/Android/Sdk/sources/android-33/android/view/ViewGroup.java_SELECTED" value="ViewGroup" />
+    <property name="cidr.known.project.marker" value="true" />
+    <property name="last_directory_selection" value="$PROJECT_DIR$/app/src/main/res/drawable-mdpi" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/app/src/main/res/drawable-hdpi" />
+    <property name="project.structure.last.edited" value="SDK Location" />
+    <property name="project.structure.proportion" value="0.17" />
+    <property name="project.structure.side.proportion" value="0.0" />
+    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.DirectoryMappings" />
+  </component>
   <component name="PsdUISettings">
     <option name="MODULE_TAB" value="Properties" />
     <option name="LAST_EDITED_BUILD_TYPE" value="release" />
   </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
-      <recent name="E:\SchoolQuiz\app\src\main\res\drawable" />
       <recent name="E:\Программирование\Android\schoolquiz3.0\app\src\main\res\drawable-hdpi" />
       <recent name="E:\Программирование\Android\schoolquiz3.0\app\src\main\res\drawable" />
       <recent name="E:\Программирование\Android\schoolquiz3.0\app\src\main\res\drawable-mdpi" />
       <recent name="E:\SchoolQuiz\app\src\main\res\mipmap-hdpi" />
+      <recent name="D:\SchoolQuiz\app\src\main\java\com\tpov\schoolquiz\domain" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
       <recent name="E:\Программирование\Android\schoolquiz3.0\app" />
@@ -233,6 +237,7 @@
         <option name="STARTUP_CPU_PROFILING_CONFIGURATION_NAME" value="Java/Kotlin Method Sample (legacy)" />
         <option name="STARTUP_NATIVE_MEMORY_PROFILING_ENABLED" value="false" />
         <option name="NATIVE_MEMORY_SAMPLE_RATE_BYTES" value="2048" />
+        <option name="PROFILING_MODE" value="NOT_SET" />
       </Profilers>
       <option name="DEEP_LINK" value="" />
       <option name="ACTIVITY_CLASS" value="" />
@@ -539,14 +544,7 @@
       <option name="project" value="LOCAL" />
       <updated>1686041335363</updated>
     </task>
-    <task id="LOCAL-00042" summary="Edit backgrounf create new quiz">
-      <created>1687263276446</created>
-      <option name="number" value="00042" />
-      <option name="presentableId" value="LOCAL-00042" />
-      <option name="project" value="LOCAL" />
-      <updated>1687263276446</updated>
-    </task>
-    <option name="localTasksCounter" value="43" />
+    <option name="localTasksCounter" value="42" />
     <servers />
   </component>
   <component name="UnknownFeatures">
@@ -569,6 +567,7 @@
     <ignored-roots>
       <path value="$PROJECT_DIR$/schoolquiz" />
     </ignored-roots>
+    <MESSAGE value="fix main images (center gravity)" />
     <MESSAGE value="fix main images (center gravity)&#10;fix questionActivity &lt;- question8" />
     <MESSAGE value="Edit MainItem (translate, checkbox)" />
     <MESSAGE value="Add animation mainActivity" />
@@ -593,8 +592,7 @@
     <MESSAGE value="Create popup menu info main item" />
     <MESSAGE value="Create translate with event translate" />
     <MESSAGE value="Create translate with event translate&#10;Edit numQuestion in item main activity" />
-    <MESSAGE value="Edit backgrounf create new quiz" />
-    <option name="LAST_COMMIT_MESSAGE" value="Edit backgrounf create new quiz" />
+    <option name="LAST_COMMIT_MESSAGE" value="Create translate with event translate&#10;Edit numQuestion in item main activity" />
     <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
   </component>
 </project>
\ No newline at end of file
