Index: app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tpov.schoolquiz.presentation.main\r\n\r\nimport android.Manifest.permission.READ_EXTERNAL_STORAGE\r\nimport android.Manifest.permission.WRITE_EXTERNAL_STORAGE\r\nimport android.animation.Animator\r\nimport android.animation.AnimatorListenerAdapter\r\nimport android.animation.ObjectAnimator\r\nimport android.animation.ValueAnimator\r\nimport android.content.Context\r\nimport android.content.SharedPreferences\r\nimport android.content.pm.PackageInfo\r\nimport android.content.pm.PackageManager\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ClipDrawable\r\nimport android.graphics.drawable.LayerDrawable\r\nimport android.os.Build\r\nimport android.os.Bundle\r\nimport android.text.Spannable\r\nimport android.text.SpannableStringBuilder\r\nimport android.text.style.ForegroundColorSpan\r\nimport android.view.*\r\nimport android.view.animation.LinearInterpolator\r\nimport android.widget.*\r\nimport androidx.annotation.RequiresApi\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.core.app.ActivityCompat\r\nimport androidx.core.content.ContextCompat\r\nimport androidx.core.view.GravityCompat\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.google.android.gms.ads.interstitial.InterstitialAd\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.tpov.schoolquiz.R\r\nimport com.tpov.schoolquiz.data.model.Qualification\r\nimport com.tpov.schoolquiz.databinding.ActivityMainBinding\r\nimport com.tpov.schoolquiz.presentation.MainApp\r\nimport com.tpov.schoolquiz.presentation.custom.CalcValues.getSkillByTimeInChat\r\nimport com.tpov.schoolquiz.presentation.custom.CalcValues.getSkillByTimeInGame\r\nimport com.tpov.schoolquiz.presentation.custom.Logcat\r\nimport com.tpov.schoolquiz.presentation.custom.NewValue.setNewSkill\r\nimport com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager\r\nimport com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager.getCountMassageIdAndReset\r\nimport com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager.getCountStartApp\r\nimport com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager.getTpovId\r\nimport com.tpov.schoolquiz.presentation.custom.SharedPreferencesManager.setCountStartApp\r\nimport com.tpov.schoolquiz.presentation.dowload.DownloadFragment\r\nimport com.tpov.schoolquiz.presentation.factory.ViewModelFactory\r\nimport com.tpov.schoolquiz.presentation.fragment.FragmentManager\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_ARENA\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_CHAT\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_DOWNLOADS\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_EVENT\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_EXIT\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_FRIEND\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_HOME\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_LEADER\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_MASSAGE\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_MY_QUIZ\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_NEWS\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_PROFILE\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_REPORT\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_SETTING\r\nimport com.tpov.schoolquiz.presentation.main.SetItemMenu.MENU_USERS\r\nimport com.tpov.schoolquiz.presentation.main.info.InfoFragment\r\nimport com.tpov.schoolquiz.presentation.network.AutorisationFragment\r\nimport com.tpov.schoolquiz.presentation.network.chat.ChatFragment\r\nimport com.tpov.schoolquiz.presentation.network.event.EventFragment\r\nimport com.tpov.schoolquiz.presentation.network.profile.ProfileFragment\r\nimport com.tpov.schoolquiz.presentation.network.profile.UsersFragment\r\nimport com.tpov.schoolquiz.presentation.setting.SettingsFragment\r\nimport com.tpov.schoolquiz.presentation.shop.ShopFragment\r\nimport com.tpov.shoppinglist.utils.TimeManager\r\nimport com.tpov.userguide.Userguide\r\nimport kotlinx.android.synthetic.main.activity_main.*\r\nimport kotlinx.coroutines.*\r\nimport java.text.NumberFormat\r\nimport java.util.*\r\nimport javax.inject.Inject\r\n\r\n/**\r\n * This is the main screen of the application, it consists of a panel that shows how much spare is left.\r\n * questions of the day and a fragment that displays user and system questions\r\n */\r\n\r\n@InternalCoroutinesApi\r\nclass MainActivity : AppCompatActivity() {\r\n    lateinit var binding: ActivityMainBinding\r\n\r\n    private var iAd: InterstitialAd? = null\r\n    private var numDayPrizeBox = 0\r\n    private lateinit var viewModel: MainActivityViewModel\r\n    private var fr1 = 1\r\n    private var fr2 = 1\r\n\r\n    private val sharedPreferenceListener =\r\n        SharedPreferences.OnSharedPreferenceChangeListener { sharedPreferences, key ->\r\n            if (key == \"tpovId\") {\r\n                val newTpovId = sharedPreferences.getInt(key, -1)\r\n                viewModel.updateTpovId(newTpovId)\r\n            }\r\n        }\r\n\r\n    @Inject\r\n    lateinit var viewModelFactory: ViewModelFactory\r\n\r\n    private var recreateActivity: Boolean = false\r\n\r\n    private val component by lazy {\r\n        (application as MainApp).component\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        val sharedPref = this.getSharedPreferences(\"profile\", Context.MODE_PRIVATE)\r\n        sharedPref.unregisterOnSharedPreferenceChangeListener(sharedPreferenceListener)\r\n\r\n        timer?.cancel()\r\n        timer = null\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        component.inject(this)\r\n        super.onCreate(savedInstanceState)\r\n        binding = ActivityMainBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        val pInfo: PackageInfo = packageManager.getPackageInfo(packageName, 0)\r\n        val versionName: String = pInfo.versionName\r\n        val versionCode: Int = pInfo.versionCode\r\n        val userguide = Userguide(this)\r\n        userguide.addGuideNewVersion(\r\n            \"SchoolQuiz v${versionName}\",\r\n            \"This is alfa test\"\r\n        )\r\n\r\n        binding.imbManu.setOnClickListener {\r\n            binding.drawerLayout.openDrawer(GravityCompat.START)\r\n        }\r\n\r\n        userguide.addGuide(\r\n            findViewById(R.id.menu_network),\r\n            \"This is network\",\r\n            \"Network\",\r\n            null,\r\n            null,\r\n            callback = {\r\n                log(\"setButtonNavListener() menu_network\")\r\n                val user = FirebaseAuth.getInstance()\r\n                if (user.currentUser != null) {\r\n                    log(\"setButtonNavListener() Аккаунт зареган\")\r\n                    Toast.makeText(this@MainActivity, \"Аккаунт найден\", Toast.LENGTH_LONG)\r\n                        .show()\r\n\r\n                    FragmentManager.setFragment(ProfileFragment.newInstance(), this)\r\n                } else {\r\n\r\n                    log(\"setButtonNavListener() Аккаунт не зареган\")\r\n                    Toast.makeText(\r\n                        this@MainActivity,\r\n                        \"Аккаунт не найден, авторизуйтесь.\",\r\n                        Toast.LENGTH_LONG\r\n                    ).show()\r\n                    FragmentManager.setFragment(AutorisationFragment.newInstance(), this)\r\n                }\r\n            })\r\n\r\n        supportActionBar?.hide()\r\n        viewModel = ViewModelProvider(this, viewModelFactory)[MainActivityViewModel::class.java]\r\n\r\n        viewModel.init()\r\n\r\n        try {\r\n            setCountStartApp(getCountStartApp() + 1)\r\n        } catch (e: Exception) {\r\n            setCountStartApp(1)\r\n        }\r\n\r\n        val imageResGold = R.drawable.baseline_favorite_24_gold\r\n        val imageRes = R.drawable.baseline_favorite_24\r\n\r\n        val sharedPref = this.getSharedPreferences(\"profile\", Context.MODE_PRIVATE)\r\n        sharedPref.registerOnSharedPreferenceChangeListener(sharedPreferenceListener)\r\n\r\n        val filledDrawable = ContextCompat.getDrawable(this, imageRes)\r\n        val filledDrawableGold = ContextCompat.getDrawable(this, imageResGold)\r\n        val emptyDrawable = ContextCompat.getDrawable(this, R.drawable.baseline_favorite_24_empty)\r\n\r\n        val layers1 = arrayOf(\r\n            emptyDrawable,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        val layers2 = arrayOf(\r\n            emptyDrawable,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        val layers3 = arrayOf(\r\n            emptyDrawable,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        val layers4 = arrayOf(\r\n            emptyDrawable,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        val layers5 = arrayOf(\r\n            emptyDrawable,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        val layersGold = arrayOf(\r\n            emptyDrawable,\r\n            ClipDrawable(filledDrawableGold, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        val layerDrawable1 = LayerDrawable(layers1)\r\n        val layerDrawable2 = LayerDrawable(layers2)\r\n        val layerDrawable3 = LayerDrawable(layers3)\r\n        val layerDrawable4 = LayerDrawable(layers4)\r\n        val layerDrawable5 = LayerDrawable(layers5)\r\n        val layerDrawableGold = LayerDrawable(layersGold)\r\n\r\n        layerDrawable1.setDrawableByLayerId(0, emptyDrawable)\r\n        layerDrawable2.setDrawableByLayerId(0, emptyDrawable)\r\n        layerDrawable3.setDrawableByLayerId(0, emptyDrawable)\r\n        layerDrawable4.setDrawableByLayerId(0, emptyDrawable)\r\n        layerDrawable5.setDrawableByLayerId(0, emptyDrawable)\r\n        layerDrawableGold.setDrawableByLayerId(0, emptyDrawable)\r\n\r\n        layerDrawable1.setDrawableByLayerId(\r\n            1,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        layerDrawable2.setDrawableByLayerId(\r\n            1,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        layerDrawable3.setDrawableByLayerId(\r\n            1,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        layerDrawable4.setDrawableByLayerId(\r\n            1,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        layerDrawable5.setDrawableByLayerId(\r\n            1,\r\n            ClipDrawable(filledDrawable, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        layerDrawableGold.setDrawableByLayerId(\r\n            1,\r\n            ClipDrawable(filledDrawableGold, Gravity.LEFT, ClipDrawable.HORIZONTAL)\r\n        )\r\n        val imageViewGold = binding.pbLifeGold1\r\n        val imageViewLife1 = binding.pbLife1\r\n        val imageViewLife2 = binding.pbLife2\r\n        val imageViewLife3 = binding.pbLife3\r\n        val imageViewLife4 = binding.pbLife4\r\n        val imageViewLife5 = binding.pbLife5\r\n\r\n        layerDrawable1.setId(0, android.R.id.background)\r\n        layerDrawable2.setId(0, android.R.id.background)\r\n        layerDrawable3.setId(0, android.R.id.background)\r\n        layerDrawable4.setId(0, android.R.id.background)\r\n        layerDrawable5.setId(0, android.R.id.background)\r\n        layerDrawableGold.setId(0, android.R.id.background)\r\n        layerDrawable1.setId(1, android.R.id.progress)\r\n        layerDrawable2.setId(1, android.R.id.progress)\r\n        layerDrawable3.setId(1, android.R.id.progress)\r\n        layerDrawable4.setId(1, android.R.id.progress)\r\n        layerDrawable5.setId(1, android.R.id.progress)\r\n        layerDrawableGold.setId(1, android.R.id.progress)\r\n\r\n        imageViewGold.setImageDrawable(layerDrawableGold)\r\n        imageViewLife1.setImageDrawable(layerDrawable1)\r\n        imageViewLife2.setImageDrawable(layerDrawable2)\r\n        imageViewLife3.setImageDrawable(layerDrawable3)\r\n        imageViewLife4.setImageDrawable(layerDrawable4)\r\n        imageViewLife5.setImageDrawable(layerDrawable5)\r\n\r\n        if (ContextCompat.checkSelfPermission(\r\n                this,\r\n                READ_EXTERNAL_STORAGE\r\n            ) == PackageManager.PERMISSION_GRANTED &&\r\n            ContextCompat.checkSelfPermission(\r\n                this,\r\n                WRITE_EXTERNAL_STORAGE\r\n            ) == PackageManager.PERMISSION_GRANTED\r\n        ) {\r\n            // Разрешения уже предоставлены, выполнить нужную функцию\r\n            binding.tvName.text = \"\"\r\n\r\n        } else {\r\n            // Разрешения не предоставлены, запросить их\r\n            requestStoragePermission()\r\n        }\r\n\r\n        numDayPrizeBox = viewModel.synthPrizeBoxDay(viewModel.getProfile()) ?: 0\r\n        viewModel.getProfileFBLiveData.observe(this) {\r\n            log(\"it: $it\")\r\n\r\n            var count = (it?.count ?: 0) * 100\r\n            layerDrawable1.findDrawableByLayerId(android.R.id.progress).level = count\r\n            count -= 10000\r\n            layerDrawable2.findDrawableByLayerId(android.R.id.progress).level = count\r\n            count -= 10000\r\n            layerDrawable3.findDrawableByLayerId(android.R.id.progress).level = count\r\n            count -= 10000\r\n            layerDrawable4.findDrawableByLayerId(android.R.id.progress).level = count\r\n            count -= 10000\r\n            layerDrawable5.findDrawableByLayerId(android.R.id.progress).level = count\r\n            count -= 10000\r\n            layerDrawableGold.findDrawableByLayerId(android.R.id.progress).level =\r\n                (it?.countGold ?: 0) * 100\r\n\r\n            if (it?.countGoldLife == 1) {\r\n                imageViewGold.visibility = View.VISIBLE\r\n            } else imageViewGold.visibility = View.GONE\r\n\r\n            when (it?.countLife) {\r\n                0, 1 -> {\r\n                    imageViewLife1.visibility = View.VISIBLE\r\n                    imageViewLife2.visibility = View.GONE\r\n                    imageViewLife3.visibility = View.GONE\r\n                    imageViewLife4.visibility = View.GONE\r\n                    imageViewLife5.visibility = View.GONE\r\n                }\r\n\r\n                2 -> {\r\n                    imageViewLife1.visibility = View.VISIBLE\r\n                    imageViewLife2.visibility = View.VISIBLE\r\n                    imageViewLife3.visibility = View.GONE\r\n                    imageViewLife4.visibility = View.GONE\r\n                    imageViewLife5.visibility = View.GONE\r\n                }\r\n\r\n                3 -> {\r\n                    imageViewLife1.visibility = View.VISIBLE\r\n                    imageViewLife2.visibility = View.VISIBLE\r\n                    imageViewLife3.visibility = View.VISIBLE\r\n                    imageViewLife4.visibility = View.GONE\r\n                    imageViewLife5.visibility = View.GONE\r\n                }\r\n\r\n                4 -> {\r\n                    imageViewLife1.visibility = View.VISIBLE\r\n                    imageViewLife2.visibility = View.VISIBLE\r\n                    imageViewLife3.visibility = View.VISIBLE\r\n                    imageViewLife4.visibility = View.VISIBLE\r\n                    imageViewLife5.visibility = View.GONE\r\n                }\r\n\r\n                5 -> {\r\n                    imageViewLife1.visibility = View.VISIBLE\r\n                    imageViewLife2.visibility = View.VISIBLE\r\n                    imageViewLife3.visibility = View.VISIBLE\r\n                    imageViewLife4.visibility = View.VISIBLE\r\n                    imageViewLife5.visibility = View.VISIBLE\r\n                }\r\n            }\r\n            log(\"SharedPreferencesManager.getNick(): ${SharedPreferencesManager.getNick()}\")\r\n            log(\"it?.nickname: ${it?.nickname}\")\r\n            if (SharedPreferencesManager.getNick() != it?.nickname) {\r\n\r\n                showTextWithDelay(\r\n                    binding.tvName, try {\r\n                        \"${it?.nickname} ${it?.trophy}\"\r\n                    } catch (e: Exception) {\r\n                        \"\"\r\n                    }, 50\r\n                )\r\n\r\n            } else binding.tvName.text =\r\n                \"${it.nickname} ${it.trophy}\"\r\n\r\n            val animationDuration = 3000L\r\n            animateValue(\r\n                binding.tvNolics,\r\n                SharedPreferencesManager.getNolic(),\r\n                it?.pointsNolics ?: 0,\r\n                animationDuration,\r\n                500\r\n            )\r\n\r\n            animateValue(\r\n                binding.tvGold,\r\n                SharedPreferencesManager.getGold(),\r\n                it?.pointsGold ?: 0,\r\n                animationDuration,\r\n                500\r\n            )\r\n\r\n            animateValueFloat(\r\n                binding.tvStars,\r\n                (SharedPreferencesManager.getSkill().toFloat() / 100_000f),\r\n                ((it?.pointsSkill?.toFloat())?.div(100_000f)) ?: 0f,\r\n                animationDuration,\r\n                500\r\n            )\r\n\r\n            animateValue(\r\n                binding.tvCountPremiun,\r\n                TimeManager.getDaysBetweenDates(\r\n                    SharedPreferencesManager.getPremium(),\r\n                    TimeManager.getCurrentTime()\r\n                ).toInt() ?: 0,\r\n                TimeManager.getDaysBetweenDates(\r\n                    it?.datePremium ?: \"\",\r\n                    TimeManager.getCurrentTime()\r\n                )\r\n                    .toInt(),\r\n                animationDuration,\r\n                500\r\n            )\r\n            SharedPreferencesManager.setProfile(\r\n                it?.pointsSkill ?: 0,\r\n                it?.pointsNolics ?: 0,\r\n                it?.pointsGold ?: 0,\r\n                it?.datePremium ?: \"\",\r\n                it?.nickname ?: \"\"\r\n            )\r\n\r\n            setNewSkill(it?.pointsSkill)\r\n        }\r\n        pb_life1.setOnTouchListener { view, event ->\r\n            if (event.action == MotionEvent.ACTION_UP) {\r\n                // Rating bar clicked, handle the event here\r\n                // You can call your method to show the translation popup/dialog\r\n                showPopupInfo(event, MainActivityAdapter.POPUP_LIFE)\r\n            }\r\n            true\r\n        }\r\n        pb_life2.setOnTouchListener { view, event ->\r\n            if (event.action == MotionEvent.ACTION_UP) {\r\n                // Rating bar clicked, handle the event here\r\n                // You can call your method to show the translation popup/dialog\r\n                showPopupInfo(event, MainActivityAdapter.POPUP_LIFE)\r\n            }\r\n            true\r\n        }\r\n        pb_life3.setOnTouchListener { view, event ->\r\n            if (event.action == MotionEvent.ACTION_UP) {\r\n                // Rating bar clicked, handle the event here\r\n                // You can call your method to show the translation popup/dialog\r\n                showPopupInfo(event, MainActivityAdapter.POPUP_LIFE)\r\n            }\r\n            true\r\n        }\r\n        pb_life4.setOnTouchListener { view, event ->\r\n            if (event.action == MotionEvent.ACTION_UP) {\r\n                // Rating bar clicked, handle the event here\r\n                // You can call your method to show the translation popup/dialog\r\n                showPopupInfo(event, MainActivityAdapter.POPUP_LIFE)\r\n            }\r\n            true\r\n        }\r\n        pb_life5.setOnTouchListener { view, event ->\r\n            if (event.action == MotionEvent.ACTION_UP) {\r\n                // Rating bar clicked, handle the event here\r\n                // You can call your method to show the translation popup/dialog\r\n                showPopupInfo(event, MainActivityAdapter.POPUP_LIFE)\r\n            }\r\n            true\r\n        }\r\n        pb_life_gold1.setOnTouchListener { view, event ->\r\n            if (event.action == MotionEvent.ACTION_UP) {\r\n                // Rating bar clicked, handle the event here\r\n                // You can call your method to show the translation popup/dialog\r\n                showPopupInfo(event, MainActivityAdapter.POPUP_LIFE_GOLD)\r\n            }\r\n            true\r\n        }\r\n        setButtonNavListener()\r\n\r\n        val profile = viewModel.getProfile()\r\n        val qualification = Qualification(\r\n            profile.tester ?: 0,\r\n            profile.moderator ?: 0,\r\n            profile.sponsor ?: 0,\r\n            profile.translater ?: 0,\r\n            profile.admin ?: 0,\r\n            profile.developer ?: 0\r\n        )\r\n\r\n        FragmentManager.setFragment(FragmentMain.newInstance(8), this)\r\n        SetItemMenu.setHomeMenu(\r\n            binding, MENU_HOME, this,\r\n            profile.pointsSkill ?: 0,\r\n            qualification\r\n        )\r\n\r\n        loadNumBoxDay()\r\n\r\n        binding.drawerLayout.addDrawerListener(object : DrawerLayout.DrawerListener {\r\n            override fun onDrawerSlide(drawerView: View, slideOffset: Float) {\r\n                // Вычисляем на сколько нужно сдвинуть элемент LinearLayout\r\n                val slideX = drawerView.width * slideOffset\r\n                binding.cv.translationX = slideX\r\n            }\r\n\r\n            override fun onDrawerOpened(drawerView: View) {\r\n                // Вызывается при открытии шторки\r\n            }\r\n\r\n            override fun onDrawerClosed(drawerView: View) {\r\n                // Вызывается при закрытии шторки\r\n            }\r\n\r\n            override fun onDrawerStateChanged(newState: Int) {\r\n                // Вызывается при изменении состояния шторки\r\n            }\r\n        })\r\n\r\n        listenerDrawer()\r\n        val imvNolics = binding.imvNolics\r\n        val imvStars = binding.imvStars\r\n        val imvGold = binding.imvGold\r\n        val imvPremium = binding.imvPremiun\r\n\r\n        SetItemMenu.setHomeMenu(\r\n            binding, MENU_HOME, this,\r\n            profile.pointsSkill ?: 0,\r\n            qualification\r\n        )\r\n\r\n        val yRotateAnimationDuration = 1000\r\n        val repeatDelay = 60_000L // Задержка между повторениями (1 минута)\r\n        var initialDelay = 1000L // Начальная задержка перед запуском анимации\r\n        var addInitialDelay = 250L\r\n\r\n\r\n        showTextWithDelay(binding.tvPbLoad, \"Соединение с сервером...\", 50)\r\n\r\n        startAnimationWithRepeat(imvStars, yRotateAnimationDuration, initialDelay, repeatDelay)\r\n\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(imvNolics, yRotateAnimationDuration, initialDelay, repeatDelay)\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(\r\n            imageViewLife1,\r\n            yRotateAnimationDuration,\r\n            initialDelay,\r\n            repeatDelay\r\n        )\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(\r\n            imageViewLife2,\r\n            yRotateAnimationDuration,\r\n            initialDelay,\r\n            repeatDelay\r\n        )\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(\r\n            imageViewLife3,\r\n            yRotateAnimationDuration,\r\n            initialDelay,\r\n            repeatDelay\r\n        )\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(\r\n            imageViewLife4,\r\n            yRotateAnimationDuration,\r\n            initialDelay,\r\n            repeatDelay\r\n        )\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(\r\n            imageViewLife5,\r\n            yRotateAnimationDuration,\r\n            initialDelay,\r\n            repeatDelay\r\n        )\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(imageViewGold, yRotateAnimationDuration, initialDelay, repeatDelay)\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(imvGold, yRotateAnimationDuration, initialDelay, repeatDelay)\r\n        initialDelay += addInitialDelay\r\n\r\n        startAnimationWithRepeat(imvPremium, yRotateAnimationDuration, initialDelay, repeatDelay)\r\n        initialDelay += addInitialDelay\r\n\r\n\r\n        viewModel.tpovIdLiveData.value = getTpovId()\r\n\r\n        createTimer()\r\n    }\r\n\r\n    private fun showPopupInfo(event: MotionEvent, popupType: Int) {\r\n        val context = this\r\n        // Create the popup window\r\n        val inflater = context.getSystemService(Context.LAYOUT_INFLATER_SERVICE) as LayoutInflater\r\n        val popupView = inflater.inflate(R.layout.translation_popup_layout, null)\r\n        val popupWindow = PopupWindow(\r\n            popupView,\r\n            ViewGroup.LayoutParams.WRAP_CONTENT,\r\n            ViewGroup.LayoutParams.WRAP_CONTENT,\r\n            true\r\n        )\r\n\r\n        // Configure the popup window\r\n        val tvPopup1 = popupView.findViewById<TextView>(R.id.tv_popup_1)\r\n        val tvPopup2 = popupView.findViewById<TextView>(R.id.tv_popup_2)\r\n        val tvPopup3 = popupView.findViewById<TextView>(R.id.tv_popup_3)\r\n        val tvPopup4 = popupView.findViewById<TextView>(R.id.tv_popup_4)\r\n        val tvPopup5 = popupView.findViewById<TextView>(R.id.tv_popup_5)\r\n        val tvPopup6 = popupView.findViewById<TextView>(R.id.tv_popup_6)\r\n        val tvPopup7 = popupView.findViewById<TextView>(R.id.tv_popup_7)\r\n        val tvPopup8 = popupView.findViewById<TextView>(R.id.tv_popup_8)\r\n        val tvPopup9 = popupView.findViewById<TextView>(R.id.tv_popup_9)\r\n        val spListPopup1 = popupView.findViewById<Spinner>(R.id.sp_list_popup_1)\r\n        val bPopup1 = popupView.findViewById<Button>(R.id.b_popup_1)\r\n        val layoutSp = popupView.findViewById<LinearLayout>(R.id.l_sp)\r\n        val layoutB = popupView.findViewById<LinearLayout>(R.id.l_b)\r\n\r\n        if (popupType == MainActivityAdapter.POPUP_LIFE) {\r\n            spListPopup1.visibility = View.GONE\r\n            bPopup1.visibility = View.GONE\r\n\r\n            layoutB.visibility = View.GONE\r\n            layoutSp.visibility = View.GONE\r\n\r\n            tvPopup1.visibility = View.VISIBLE\r\n            tvPopup2.visibility = View.GONE\r\n            tvPopup3.visibility = View.GONE\r\n            tvPopup4.visibility = View.GONE\r\n            tvPopup5.visibility = View.GONE\r\n            tvPopup6.visibility = View.GONE\r\n            tvPopup7.visibility = View.GONE\r\n            tvPopup8.visibility = View.GONE\r\n            tvPopup9.visibility = View.GONE\r\n\r\n            try {\r\n                tvPopup1.text = \"Life count: ${viewModel.getProfileCount()}/${\r\n                    viewModel.getProfileCountLife()\r\n                        ?.times(100)\r\n                } (${\r\n                    (viewModel.getProfileCount()?.times(100))?.div(\r\n                        viewModel.getProfileCountLife()\r\n                            ?.times(100)!!\r\n                    )\r\n                }%)\"\r\n            } catch (e: Exception) {\r\n                Toast.makeText(this, \"Error get life counts\", Toast.LENGTH_LONG).show()\r\n            }\r\n\r\n        } else if (popupType == MainActivityAdapter.POPUP_LIFE_GOLD) {\r\n            tvPopup1.visibility = View.VISIBLE\r\n            tvPopup2.visibility = View.GONE\r\n            tvPopup3.visibility = View.GONE\r\n            tvPopup4.visibility = View.GONE\r\n            tvPopup5.visibility = View.GONE\r\n            tvPopup6.visibility = View.GONE\r\n            tvPopup7.visibility = View.GONE\r\n            tvPopup8.visibility = View.GONE\r\n            tvPopup9.visibility = View.GONE\r\n\r\n            layoutB.visibility = View.GONE\r\n            layoutSp.visibility = View.GONE\r\n\r\n            spListPopup1.visibility = View.GONE\r\n            bPopup1.visibility = View.GONE\r\n\r\n\r\n            try {\r\n                tvPopup1.text = \"Life count: ${viewModel.getProfileCountGold()}/${\r\n                    viewModel.getProfileCountGoldLife()\r\n                        ?.times(100)\r\n                } (${\r\n                    (viewModel.getProfileCountGold()?.times(100))?.div(\r\n                        viewModel.getProfileCountGoldLife()\r\n                            ?.times(100)!!\r\n                    )\r\n                }%)\"\r\n            } catch (e: Exception) {\r\n                Toast.makeText(this, \"Error get life counts\", Toast.LENGTH_LONG).show()\r\n            }\r\n        }\r\n\r\n        popupView.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED)\r\n        val popupWidth = popupView.measuredWidth\r\n        val popupHeight = popupView.measuredHeight\r\n        val touchX = event.rawX\r\n        val touchY = event.rawY\r\n        popupWindow.width = popupWidth\r\n        popupWindow.height = popupHeight\r\n        popupWindow.showAtLocation(\r\n            binding.viewBackground,\r\n            Gravity.NO_GRAVITY,\r\n            touchX.toInt() + 16,\r\n            touchY.toInt() + 16\r\n        )\r\n    }\r\n\r\n    private var timer: Timer? = null\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    private fun createTimer() {\r\n        timer = Timer()\r\n        val delay = 0L // Delay before the timer starts executing the task (in milliseconds)\r\n        val period =\r\n            100_000L // Interval between consecutive executions of the task (in milliseconds)\r\n        val task = object : TimerTask() {\r\n            override fun run() {\r\n                updateProfileCount(period)\r\n            }\r\n        }\r\n\r\n        // Schedule the task to run every minute, starting after the specified delay\r\n        timer?.scheduleAtFixedRate(task, delay, period)\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    private fun updateProfileCount(period: Long) {\r\n\r\n        try {\r\n            val profile = viewModel.getProfile()\r\n            val userguide = Userguide(this)\r\n\r\n            viewModel.updateProfileUseCase(\r\n                profile.copy(\r\n                    count = calcCount(\r\n                        profile.count,\r\n                        profile.countLife,\r\n                        profile.dateCloseApp\r\n                    ),\r\n                    dateCloseApp = TimeManager.getCurrentTime(),\r\n                    pointsSkill = (profile.pointsSkill!!.plus(\r\n                        if (supportFragmentManager.findFragmentById(R.id.title_fragment) is ChatFragment) {\r\n                            getSkillByTimeInChat(period.toInt())\r\n                        } else {\r\n                            getSkillByTimeInGame(period.toInt())\r\n                        }\r\n                    ).plus(profile.addPointsNolics ?: 0)),\r\n                    pointsGold = profile.pointsGold?.plus(profile.addPointsGold ?: 0),\r\n                    pointsNolics = profile.pointsNolics?.plus(profile.addPointsNolics ?: 0),\r\n                    trophy = profile.trophy + profile.addTrophy,\r\n                    timeInGamesInQuiz = if (supportFragmentManager.findFragmentById(R.id.title_fragment) is ChatFragment) {\r\n                        profile.timeInGamesInQuiz\r\n                    } else {\r\n                        profile.timeInGamesInQuiz\r\n                            ?.plus(1)\r\n                    },\r\n\r\n                    timeInGamesInChat = if (supportFragmentManager.findFragmentById(R.id.title_fragment) is ChatFragment) {\r\n                        profile.timeInGamesInChat\r\n                            ?.plus(1)\r\n                    } else {\r\n                        profile.timeInGamesInChat\r\n                    },\r\n\r\n                    timeInGamesSmsPoints = profile.timeInGamesSmsPoints?.plus(\r\n                        getCountMassageIdAndReset()\r\n                    ),\r\n\r\n                    addPointsGold = 0,\r\n                    addPointsNolics = 0,\r\n                    addPointsSkill = 0,\r\n                    addTrophy = \"\"\r\n                )\r\n            )\r\n\r\n        } catch (e: Exception) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    private fun calcCount(count: Int?, countLife: Int?, dateCloseApp: String?): Int {\r\n        val countSecTime =\r\n            TimeManager.getSecondBetweenDates(dateCloseApp ?: \"0\", TimeManager.getCurrentTime())\r\n        val calcCount = countSecTime?.times(0.025)\r\n\r\n        val calcAllCount = count?.let { calcCount?.plus(it)?.toInt() }\r\n\r\n        log(\"calcAllCount: $calcAllCount\")\r\n        return if (getMaxCount(countLife) < calcAllCount!!) getMaxCount(countLife)\r\n        else calcAllCount\r\n\r\n    }\r\n\r\n    private fun getMaxCount(countLife: Int?): Int {\r\n        return when (countLife) {\r\n            1 -> 100\r\n            2 -> 200\r\n            3 -> 300\r\n            4 -> 400\r\n            5 -> 500\r\n            else -> 0\r\n        }\r\n    }\r\n\r\n\r\n    private fun animateValue(\r\n        textView: TextView,\r\n        startValue: Int,\r\n        endValue: Int,\r\n        duration: Long,\r\n        startDelay: Long\r\n    ) {\r\n        val valueAnimator = ValueAnimator.ofInt(startValue, endValue).apply {\r\n            setDuration(duration)\r\n            setStartDelay(startDelay)\r\n            interpolator = LinearInterpolator()\r\n        }\r\n        valueAnimator.addUpdateListener { animation ->\r\n            textView.text = NumberFormat.getIntegerInstance().format(animation.animatedValue)\r\n        }\r\n        valueAnimator.start()\r\n    }\r\n\r\n    private fun animateValueFloat(\r\n        textView: TextView,\r\n        startValue: Float,\r\n        endValue: Float,\r\n        duration: Long,\r\n        startDelay: Long\r\n    ) {\r\n        val valueAnimator = ValueAnimator.ofFloat(startValue, endValue).apply {\r\n            setDuration(duration)\r\n            setStartDelay(startDelay)\r\n            interpolator = LinearInterpolator()\r\n        }\r\n        valueAnimator.addUpdateListener { animation ->\r\n            textView.text = String.format(\"%.1f\", animation.animatedValue)\r\n        }\r\n        valueAnimator.start()\r\n    }\r\n\r\n    private fun showTextWithDelay(textView: TextView, text: String, delayInMillis: Long) {\r\n        CoroutineScope(Dispatchers.Main).launch {\r\n            val spannableText = SpannableStringBuilder()\r\n            for (char in text) {\r\n                val start = spannableText.length\r\n                spannableText.append(char.toString())\r\n                spannableText.setSpan(\r\n                    ForegroundColorSpan(Color.WHITE),\r\n                    start,\r\n                    start + 1,\r\n                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE\r\n                )\r\n                textView.text = spannableText\r\n                delay(delayInMillis)\r\n\r\n                // Возвращаем цвет буквы к исходному (черный в данном случае)\r\n                spannableText.setSpan(\r\n                    ForegroundColorSpan(Color.BLACK),\r\n                    start,\r\n                    start + 1,\r\n                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE\r\n                )\r\n                textView.text = spannableText\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun startAnimationWithRepeat(\r\n        imageView: ImageView,\r\n        duration: Int,\r\n        initialDelay: Long,\r\n        repeatDelay: Long\r\n    ) {\r\n        val animator = ObjectAnimator.ofFloat(imageView, \"rotationY\", 0f, 360f).apply {\r\n            this.duration = duration.toLong()\r\n        }\r\n\r\n        animator.addListener(object : AnimatorListenerAdapter() {\r\n            override fun onAnimationEnd(animation: Animator) {\r\n                animation.removeListener(this)\r\n                imageView.postDelayed({\r\n                    animation.addListener(this)\r\n                    animation.start()\r\n                }, repeatDelay)\r\n            }\r\n        })\r\n\r\n        imageView.postDelayed({\r\n            animator.start()\r\n        }, initialDelay)\r\n    }\r\n\r\n    // Использование функции в вашем коде\r\n    override fun onPrepareOptionsMenu(menu: Menu): Boolean {\r\n        return super.onPrepareOptionsMenu(menu)\r\n    }\r\n\r\n    private fun listenerDrawer() {\r\n\r\n        log(\"fun listenerDrawer()\")\r\n\r\n        binding.navigationView.setNavigationItemSelectedListener { menuItem ->\r\n\r\n            binding.drawerLayout.closeDrawer(GravityCompat.START)\r\n            // ваш код обработки нажатия на элемент меню\r\n\r\n            log(\"listenerDrawer() menuItem: ${menuItem.toString()}\")\r\n            val profile = viewModel.getProfile()\r\n            val qualification = Qualification(\r\n                profile.tester ?: 0,\r\n                profile.moderator ?: 0,\r\n                profile.sponsor ?: 0,\r\n                profile.translater ?: 0,\r\n                profile.admin ?: 0,\r\n                profile.developer ?: 0\r\n            )\r\n\r\n            when (menuItem.toString()) {\r\n                resources.getString(R.string.nav_chat) -> {\r\n                    FragmentManager.setFragment(ChatFragment.newInstance(), this)\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding,\r\n                        MENU_CHAT,\r\n                        this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_downloads) -> {\r\n                    FragmentManager.setFragment(DownloadFragment(), this)\r\n                    SetItemMenu.setHomeMenu(\r\n                        binding,\r\n                        MENU_DOWNLOADS,\r\n                        this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    ) // Используйте подходящий номер пункта меню\r\n                }\r\n\r\n                resources.getString(R.string.nav_enter) -> {\r\n\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_PROFILE, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_exit) -> {\r\n                    FirebaseAuth.getInstance().signOut()\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_EXIT, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_global) -> {\r\n                    FragmentManager.setFragment(FragmentMain.newInstance(5), this)\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_ARENA, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_friends) -> {\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_FRIEND, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_home) -> {\r\n                    FragmentManager.setFragment(FragmentMain.newInstance(8), this)\r\n                    SetItemMenu.setHomeMenu(\r\n                        binding, MENU_HOME, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_leaders) -> {\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_LEADER, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_massages) -> {\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_MASSAGE, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_my_quiz) -> {\r\n                    FragmentManager.setFragment(FragmentMain.newInstance(1), this)\r\n                    SetItemMenu.setHomeMenu(\r\n                        binding, MENU_MY_QUIZ, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_news) -> {\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_NEWS, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_players) -> {\r\n                    FragmentManager.setFragment(UsersFragment.newInstance(), this)\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_USERS, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_reports) -> {\r\n\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_REPORT, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_task) -> {\r\n                    FragmentManager.setFragment(EventFragment.newInstance(), this)\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_EVENT, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                resources.getString(R.string.nav_settings) -> {\r\n                    FragmentManager.setFragment(SettingsFragment.newInstance(), this)\r\n                    SetItemMenu.setHomeMenu(\r\n                        binding, MENU_SETTING, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n            }\r\n\r\n            binding.navigationView.inflateMenu(R.menu.navigation_manu)\r\n            true // не забудьте вернуть значение true, чтобы показать, что событие было обработано\r\n\r\n        }\r\n    }\r\n\r\n    private fun requestStoragePermission() {\r\n        ActivityCompat.requestPermissions(\r\n            this,\r\n            arrayOf(READ_EXTERNAL_STORAGE, WRITE_EXTERNAL_STORAGE),\r\n            REQUEST_CODE_STORAGE_PERMISSION\r\n        )\r\n    }\r\n\r\n    //Окраживаем квадратики в красный и зеленый в зависимости сколько осталось запасных вопросов-дня\r\n    private fun loadNumBoxDay() = with(binding) {\r\n        log(\"numberBox setValue numDayPrizeBox: $numDayPrizeBox\")\r\n        if (numDayPrizeBox > 0) textView10.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 1) textView9.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 2) textView8.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 3) textView7.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 4) textView6.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 5) textView5.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 6) textView4.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 7) textView3.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 8) textView2.setBackgroundResource(R.color.num_chack_norice_green)\r\n        if (numDayPrizeBox > 9) textView.setBackgroundResource(R.color.num_chack_norice_green)\r\n    }\r\n\r\n    fun replaceFragment(fragment: Fragment) {\r\n        val fragmentManager = supportFragmentManager\r\n        val transaction = fragmentManager.beginTransaction()\r\n        transaction.replace(R.id.title_fragment, fragment)\r\n        transaction.addToBackStack(null)\r\n        transaction.commit()\r\n\r\n    }\r\n\r\n    override fun onRequestPermissionsResult(\r\n        requestCode: Int,\r\n        permissions: Array<out String>,\r\n        grantResults: IntArray\r\n    ) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\r\n\r\n        if (requestCode == REQUEST_CODE_STORAGE_PERMISSION) {\r\n            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED &&\r\n                grantResults[1] == PackageManager.PERMISSION_GRANTED\r\n            ) {\r\n                // Разрешения получены, выполнить нужную функцию\r\n                viewModel =\r\n                    ViewModelProvider(this, viewModelFactory)[MainActivityViewModel::class.java]\r\n                viewModel.init()\r\n            } else {\r\n                // Разрешения не получены, вывести сообщение об ошибке\r\n                Toast.makeText(\r\n                    this,\r\n                    \"Storage permission is required to use this app\",\r\n                    Toast.LENGTH_LONG\r\n                ).show()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private fun setVisibleMenu(itemId: MenuItem) {\r\n\r\n        val profile = viewModel.getProfile()\r\n        val qualification = Qualification(\r\n            profile.tester ?: 0,\r\n            profile.moderator ?: 0,\r\n            profile.sponsor ?: 0,\r\n            profile.translater ?: 0,\r\n            profile.admin ?: 0,\r\n            profile.developer ?: 0\r\n        )\r\n        log(\"fun setVisibleMenu() itemId.itemId = $itemId\")\r\n\r\n        when (itemId.itemId) {\r\n\r\n            R.id.menu_home -> {\r\n                if (fr1 != 1) {\r\n                    SetItemMenu.setHomeMenu(\r\n                        binding, MENU_HOME, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                    fr1 = 1\r\n                }\r\n            }\r\n//\r\n//            R.id.menu_adb -> {\r\n//                if (fr1 != 2) {\r\n//\r\n//                    fr1 = 2\r\n//                }\r\n//            }\r\n//\r\n//            R.id.menu_info -> {\r\n//                if (fr1 != 4) {\r\n//\r\n//                    fr1 = 4\r\n//                }\r\n//            }\r\n\r\n            R.id.menu_network -> {\r\n                if (fr1 != 2) {\r\n                    SetItemMenu.setNetworkMenu(\r\n                        binding, MENU_PROFILE, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                    fr1 = 2\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun setButtonNavListener() {\r\n\r\n        log(\"fun setButtonNavListener()\")\r\n        binding.bNav.setOnItemSelectedListener {\r\n            val profile = viewModel.getProfile()\r\n            val qualification = Qualification(\r\n                profile.tester ?: 0,\r\n                profile.moderator ?: 0,\r\n                profile.sponsor ?: 0,\r\n                profile.translater ?: 0,\r\n                profile.admin ?: 0,\r\n                profile.developer ?: 0\r\n            )\r\n            setVisibleMenu(it)\r\n            when (it.itemId) {\r\n\r\n                R.id.menu_home -> {\r\n\r\n                    log(\"setButtonNavListener() menu_home\")\r\n                    FragmentManager.setFragment(FragmentMain.newInstance(8), this)\r\n                    SetItemMenu.setHomeMenu(\r\n                        binding, MENU_HOME, this,\r\n                        profile.pointsSkill ?: 0,\r\n                        qualification\r\n                    )\r\n                }\r\n\r\n                R.id.menu_adb -> {\r\n                    FragmentManager.setFragment(ShopFragment.newInstance(), this)\r\n                }\r\n\r\n                R.id.menu_info -> {\r\n                    log(\"setButtonNavListener() menu_info\")\r\n                    FragmentManager.setFragment(InfoFragment.newInstance(), this)\r\n                }\r\n\r\n                R.id.menu_network -> {\r\n\r\n                    log(\"setButtonNavListener() menu_network\")\r\n                    val user = FirebaseAuth.getInstance()\r\n                    if (user.currentUser != null) {\r\n                        log(\"setButtonNavListener() Аккаунт зареган\")\r\n                        Toast.makeText(this@MainActivity, \"Аккаунт найден\", Toast.LENGTH_LONG)\r\n                            .show()\r\n\r\n                        FragmentManager.setFragment(ProfileFragment.newInstance(), this)\r\n                    } else {\r\n\r\n                        log(\"setButtonNavListener() Аккаунт не зареган\")\r\n                        Toast.makeText(\r\n                            this@MainActivity,\r\n                            \"Аккаунт не найден, авторизуйтесь.\",\r\n                            Toast.LENGTH_LONG\r\n                        ).show()\r\n                        FragmentManager.setFragment(AutorisationFragment.newInstance(), this)\r\n                    }\r\n                }\r\n            }\r\n            true\r\n        }\r\n    }\r\n\r\n    fun log(massage: String) {\r\n        Logcat.log(massage, \"MainActivity\", Logcat.LOG_ACTIVITY)\r\n    }\r\n\r\n    companion object {\r\n\r\n        const val REQUEST_CODE_STORAGE_PERMISSION = 1001\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivity.kt b/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivity.kt
--- a/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivity.kt	(revision 3abb2ba380c5fcbc8b522bb34764180581ad5d6b)
+++ b/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivity.kt	(date 1689097133091)
@@ -1203,7 +1203,11 @@
                 }
 
                 R.id.menu_network -> {
-
+                    SetItemMenu.setNetworkMenu(
+                        binding, MENU_PROFILE, this,
+                        profile.pointsSkill ?: 0,
+                        qualification
+                    )
                     log("setButtonNavListener() menu_network")
                     val user = FirebaseAuth.getInstance()
                     if (user.currentUser != null) {
Index: app/src/main/res/values-ru/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"question_light2\">Тихий океан больше Атлантического океана.</string>\r\n    <string name=\"question_light3\">Суэцкий канал соединяет Красное море и Индийский океан.</string>\r\n    <string name=\"question_light4\">Исток реки Нил находится в Египте.</string>\r\n    <string name=\"question_light5\">Река Амазонка - самая длинная река в Америке.</string>\r\n    <string name=\"question_light6\">Озеро Байкал - старейшее и самое глубокое пресноводное озеро в мире.</string>\r\n\r\n    <string name=\"question_light7\">Самая длинная река в России — Лена.</string>\r\n    <string name=\"question_light8\">Штаб-квартира ООН находится в Нью-Йорке.</string>\r\n    <string name=\"question_light9\">Габороне — столица Габона.</string>\r\n    <string name=\"question_light10\">Сицилию омывает Средиземное море.</string>\r\n    <string name=\"question_light11\">Столица Ирландии — Дублин.</string>\r\n    <string name=\"question_light12\">Раньше Париж носил название Лютеция.</string>\r\n    <string name=\"question_light13\">Атлас – это цепь горных хребтов, расположенная в Европе.</string>\r\n    <string name=\"question_light14\">В Китае, несмотря на его внушительные размеры, всего один часовой пояс.</string>\r\n    <string name=\"question_light15\">Пирамиды майя города Чичен-Ица находятся в Перу.</string>\r\n    <string name=\"question_light16\">Рейкьявик — столица Исландии.</string>\r\n    <string name=\"question_light17\">Самая холодная точка мира, где постоянно проживают люди, — российское село Оймякон.</string>\r\n    <string name=\"question_light18\">Украина - самая большая страна, которая полностью находится в Европе.</string>\r\n    <string name=\"question_light19\">Германская империя - это тоже самое, что и Третий Рейх.</string>\r\n    <string name=\"question_light20\">Каспийское море - самое солёное озеро в мире.</string>\r\n\r\n    <string name=\"question_hard1\">Большенство бельгейцев живут в сельской местности.</string>\r\n    <string name=\"question_hard2\">В прибалтийских странах ни одна женщина не избиралась на пост президента.</string>\r\n    <string name=\"question_hard3\">Андорра - единственное княжество в мире.</string>\r\n    <string name=\"question_hard4\">Название государства Бельгия происходит от названия древнего племени.</string>\r\n    <string name=\"question_hard5\">Внутри Италии находятся два независимых государства.</string>\r\n    <string name=\"question_hard6\">В Европе нет стран, которые не имеют выхода к морю.</string>\r\n    <string name=\"question_hard7\">В Дублине нет ни одного парка.</string>\r\n    <string name=\"question_hard8\">Сан-Марино претендует на звание старейшого суверенного государства в мире.</string>\r\n    <string name=\"question_hard9\">Великобритания - единственная европейская страна с левосторонним движением.</string>\r\n    <string name=\"question_hard10\">В Шотладнии очень жаркий климат.</string>\r\n    <string name=\"question_hard11\">Самая большая ирландская церковь находится в Дублине.</string>\r\n    <string name=\"question_hard12\">В парижском Пантеоне не захоронено ни одной женжины.</string>\r\n    <string name=\"question_hard13\">В Бельгии почти нет никаких фабрик и заводов.</string>\r\n    <string name=\"question_hard14\">Неаполь - самый большой город в Италии.</string>\r\n    <string name=\"question_hard15\">В Англии есть город, в названии которого присутсвует воскликательный знак(!).</string>\r\n    <string name=\"question_hard16\">Швеция - самая маленькая скандинавская страна.</string>\r\n    <string name=\"question_hard17\">Швейцария не брала участи во второй мировой войне</string>\r\n    <string name=\"question_hard18\">Раньше корейский полуостров была под контролем Японии</string>\r\n    <string name=\"question_hard19\">США забрала Аляску войной</string>\r\n    <string name=\"question_hard20\">Вьетнам победил у войне с США благодаря численности населения</string>\r\n\r\n    <string name=\"true_button\">Верно</string>\r\n    <string name=\"false_button\">Не верно</string>\r\n    <string name=\"next_button\">След.</string>\r\n    <string name=\"pref_button\">Пред.</string>\r\n    <string name=\"correct_toast\">Верно!!</string>\r\n    <string name=\"incorrect_toast\">Не верно!!</string>\r\n    <string name=\"null_toast\">Вопросов не осталось</string>\r\n\r\n    <string name=\"load_front_list\">Синхронизация встроенных вопросов</string>\r\n\r\n    <string name=\"warning_text\">Вы уверены, что хотите это сделать?</string>\r\n    <string name=\"show_answer_button\">Посмотреть ответ</string>\r\n    <string name=\"cheat_button\">Чит!</string>\r\n    <string name=\"judgment_toast\">Вы признаны как читер.</string>\r\n\r\n    <string name=\"title_text\">Quiz</string>\r\n    <string name=\"menu_home_text\">Домой</string>\r\n    <string name=\"menu_new\">Магазин</string>\r\n    <string name=\"menu_info\">Инфо</string>\r\n    <string name=\"menu_settings\">Настройки</string>\r\n    <string name=\"main_title_name\">Домой</string>\r\n    <string name=\"vandroid\">vandroid</string>\r\n    <string name=\"name\">Имя…</string>\r\n    <string name=\"question\">Вопрос…</string>\r\n    <string name=\"new_question\">Имя квеста</string>\r\n    <string name=\"end_button\">END</string>\r\n    <string name=\"hard_question\">Сложный вопрос</string>\r\n    <string name=\"unswer\">Ответ</string>\r\n    <string name=\"light_question\">Легкий вопрос</string>\r\n    <string name=\"clear\">ОЧИСТИТЬ</string>\r\n    <string name=\"load_geo_quiz\">Загрузка GeoQuiz</string>\r\n    <string name=\"load_сrime\">Загружена незаконченная сессия</string>\r\n    <string name=\"go\">Начать.</string>\r\n    <string name=\"error_load_question\">Ошибка загрузки квеста, повторите попытку</string>\r\n    <string name=\"nice\">Nice</string>\r\n    <string name=\"no_nice\">No nice</string>\r\n    <string name=\"go_hard_question\">Вам доступны сложные вопросы</string>\r\n    <string name=\"inter_ad_id\">ca-app-pub-6279944059986833/5924755266</string>\r\n    <string name=\"massage_show_ads\">Реклама</string>\r\n    <string name=\"time_format_key\">time_format_key</string>\r\n    <string name=\"chose_time_format\">Выбрать формат времени</string>\r\n    <string name=\"remove_ads\">Убрать рекламу</string>\r\n    <string name=\"remove_summary\">Убрать рекламу</string>\r\n    <string name=\"load_api_question\">Load api question</string>\r\n\r\n    <string name=\"start_massage_1\">Quiz – представляет собой квест правда–ложь, в котором изначально есть базовые вопросы с возможносью добавлением собственных, отвечая на которых вы зарабатываете очки 1–100.</string>\r\n    <string name=\"start_massage_2\">После нажати на название квеста вы переходите на этап прохождения, который состоит из 2 частей (легкие вопросы и сложные). Изначально вы проходите легкие вопросы, которыми можно заработать максимум 83,3% (2 звезды), если вы набрали 2 звезды – на очередное прохождение квеста вы будете отвечать на сложные вопросы которыми можно набрать 83,3 – 100 % (2–3 звезды)</string>\r\n    <string name=\"start_massage_3\">Квесты так же можно удалять - нажатием на мусорный бак, с всплывающим окном с подтверждением а так же возможностю не удалять сами вопросы с базы данных (Советуем ставить галочку - удалить все вопросы)</string>\r\n    <string name=\"start_massage_4\">Так же квестами можно поделиться, с ответами или без в зависимости поставите ли вы галочку, сложные вопросы будут отмечены знаком - *. (Базовые вопросы не показывают ответы если ими поделитесь)</string>\r\n    <string name=\"start_massage_7\">Возле кнопки с названием квеста есть индикатор, который указывает на сложность вопросов после её нажатия, у нее может быть 2 состояния, lite question/ hard question. Ниже есть 3 числа, которые показывают: к-во легких вопросов/ сложных/ к-во попыток прохождения. Над звездами есть два показания: левое - это средний процент за все попытки, правое - лучший результат. Звезды показывают лучший результат. Дата - это дата создания квеста, над датой отображено имя лучшего результата, если оно было указано.</string>\r\n    <string name=\"start_massage_5\">При попытке создания собственного вопроса вам помешает диалоговое окно, в котором вы должны указать название квеста, далее вы указываете сам вопрос, ответ на него, сложность и кнопку next, и заполняете следующий вопрос, и т.д. пока вам не надоест, затем жмете end. Обратите внимание, что end так же записывает вопрос.</string>\r\n    <string name=\"timer\">Имеет сложную логику, если при запуске приложения отображается отвеченный вопрос - таймер не запускается, если перематывать вопросы и открывается не отвеченный вопрос - таймер запускается, при дальнейшем перематывании вопросов - таймер продолжает считать даже если вы находитесь на отвеченном вопросе, пока дадите ответ на любой из вопросов или таймер не закончится. Если таймер закончится - он отвечает на текущий вопрос случайным образом, если вы находитесь на отвеченном вопросе - отвечает на последний просмотренный не отвеченный вопрос.\r\nВ общем, таймер запускается если вы прочитали не отвеченный вопрос.</string>\r\n\r\n    <string name=\"start_massage_6\">В дальшнейшем, будут добавляться различные школьные вопросы, новые возможности. Так же можете поделиться своими вопросами в отзыв, лучшие вопросы возможно будут добавлены в приложение. А так же, можете поддержать автора оценкой 5, или убрать рекламу, и у вас будет все true ^)</string>\r\n    <string name=\"FrontActivity_num_chack_norice\">Осталось вопросов-дня в оффлайн режиме</string>\r\n    <string name=\"tv_auto_update_question\">Автообновление вопроса</string>\r\n    <string name=\"list_question\">Список вопросов</string>\r\n    <string name=\"hard_quiz\">Hard quiz!</string>\r\n    <string name=\"light_quiz\">Light quiz!</string>\r\n    <string name=\"dialog_text_delete\">Delete text?</string>\r\n    <string name=\"dialog_short_text_delete\">delete</string>\r\n    <string name=\"dialog_short_text_share\">Share</string>\r\n    <string name=\"dialog_text_share\">Share text</string>\r\n    <string name=\"menu_network\">Network</string>\r\n    <string name=\"prompt_email\">email</string>\r\n    <string name=\"prompt_password\">password</string>\r\n    <string name=\"action_sign_in_short\">out email</string>\r\n    <string name=\"action_sign_in\">Login</string>\r\n    <string name=\"action_registration\">registration</string>\r\n    <string name=\"prompt_name\">Your name</string>\r\n    <string name=\"prompt_years\">Your years (01.01.2001)</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-ru/strings.xml b/app/src/main/res/values-ru/strings.xml
--- a/app/src/main/res/values-ru/strings.xml	(revision 3abb2ba380c5fcbc8b522bb34764180581ad5d6b)
+++ b/app/src/main/res/values-ru/strings.xml	(date 1689099702933)
@@ -1,45 +1,4 @@
 <resources>
-    <string name="question_light2">Тихий океан больше Атлантического океана.</string>
-    <string name="question_light3">Суэцкий канал соединяет Красное море и Индийский океан.</string>
-    <string name="question_light4">Исток реки Нил находится в Египте.</string>
-    <string name="question_light5">Река Амазонка - самая длинная река в Америке.</string>
-    <string name="question_light6">Озеро Байкал - старейшее и самое глубокое пресноводное озеро в мире.</string>
-
-    <string name="question_light7">Самая длинная река в России — Лена.</string>
-    <string name="question_light8">Штаб-квартира ООН находится в Нью-Йорке.</string>
-    <string name="question_light9">Габороне — столица Габона.</string>
-    <string name="question_light10">Сицилию омывает Средиземное море.</string>
-    <string name="question_light11">Столица Ирландии — Дублин.</string>
-    <string name="question_light12">Раньше Париж носил название Лютеция.</string>
-    <string name="question_light13">Атлас – это цепь горных хребтов, расположенная в Европе.</string>
-    <string name="question_light14">В Китае, несмотря на его внушительные размеры, всего один часовой пояс.</string>
-    <string name="question_light15">Пирамиды майя города Чичен-Ица находятся в Перу.</string>
-    <string name="question_light16">Рейкьявик — столица Исландии.</string>
-    <string name="question_light17">Самая холодная точка мира, где постоянно проживают люди, — российское село Оймякон.</string>
-    <string name="question_light18">Украина - самая большая страна, которая полностью находится в Европе.</string>
-    <string name="question_light19">Германская империя - это тоже самое, что и Третий Рейх.</string>
-    <string name="question_light20">Каспийское море - самое солёное озеро в мире.</string>
-
-    <string name="question_hard1">Большенство бельгейцев живут в сельской местности.</string>
-    <string name="question_hard2">В прибалтийских странах ни одна женщина не избиралась на пост президента.</string>
-    <string name="question_hard3">Андорра - единственное княжество в мире.</string>
-    <string name="question_hard4">Название государства Бельгия происходит от названия древнего племени.</string>
-    <string name="question_hard5">Внутри Италии находятся два независимых государства.</string>
-    <string name="question_hard6">В Европе нет стран, которые не имеют выхода к морю.</string>
-    <string name="question_hard7">В Дублине нет ни одного парка.</string>
-    <string name="question_hard8">Сан-Марино претендует на звание старейшого суверенного государства в мире.</string>
-    <string name="question_hard9">Великобритания - единственная европейская страна с левосторонним движением.</string>
-    <string name="question_hard10">В Шотладнии очень жаркий климат.</string>
-    <string name="question_hard11">Самая большая ирландская церковь находится в Дублине.</string>
-    <string name="question_hard12">В парижском Пантеоне не захоронено ни одной женжины.</string>
-    <string name="question_hard13">В Бельгии почти нет никаких фабрик и заводов.</string>
-    <string name="question_hard14">Неаполь - самый большой город в Италии.</string>
-    <string name="question_hard15">В Англии есть город, в названии которого присутсвует воскликательный знак(!).</string>
-    <string name="question_hard16">Швеция - самая маленькая скандинавская страна.</string>
-    <string name="question_hard17">Швейцария не брала участи во второй мировой войне</string>
-    <string name="question_hard18">Раньше корейский полуостров была под контролем Японии</string>
-    <string name="question_hard19">США забрала Аляску войной</string>
-    <string name="question_hard20">Вьетнам победил у войне с США благодаря численности населения</string>
 
     <string name="true_button">Верно</string>
     <string name="false_button">Не верно</string>
@@ -57,11 +16,11 @@
     <string name="judgment_toast">Вы признаны как читер.</string>
 
     <string name="title_text">Quiz</string>
-    <string name="menu_home_text">Домой</string>
+    <string name="menu_home_text">Home</string>
     <string name="menu_new">Магазин</string>
     <string name="menu_info">Инфо</string>
     <string name="menu_settings">Настройки</string>
-    <string name="main_title_name">Домой</string>
+    <string name="main_title_name">Home</string>
     <string name="vandroid">vandroid</string>
     <string name="name">Имя…</string>
     <string name="question">Вопрос…</string>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AndroidLayouts\">\r\n    <shared>\r\n      <config>\r\n        <device id=\"_device_class_foldable\" />\r\n        <device id=\"_device_class_phone\" />\r\n        <device id=\"_device_class_desktop\" />\r\n        <locale>uk</locale>\r\n        <target>android-33-ext4</target>\r\n      </config>\r\n    </shared>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"NONE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5af0db75-4be5-4ef3-8f7e-967bab06300d\" name=\"Changes\" comment=\"Fix translate\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.6/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/file-system.probe\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/file-system.probe\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"device_and_snapshot_combo_box_target[17e6bcfc]\" />\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"ExternalProjectsManager\">\r\n    <system id=\"GRADLE\">\r\n      <state>\r\n        <task path=\"$PROJECT_DIR$/app\">\r\n          <activation />\r\n        </task>\r\n        <projects_view>\r\n          <tree_state>\r\n            <expand>\r\n              <path>\r\n                <item name=\"\" type=\"6a2764b6:ExternalProjectsStructure$RootNode\" />\r\n                <item name=\"schoolquiz\" type=\"f1a62948:ProjectNode\" />\r\n              </path>\r\n            </expand>\r\n            <select />\r\n          </tree_state>\r\n        </projects_view>\r\n      </state>\r\n    </system>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"valueResourceFile\" />\r\n        <option value=\"layoutResourceFile\" />\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"resourceFile\" />\r\n        <option value=\"Kotlin Object\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GenerateSignedApkSettings\">\r\n    <option name=\"BUILD_TARGET_KEY\" value=\"apk\" />\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/fix\" />\r\n  </component>\r\n  <component name=\"Git.Rebase.Settings\">\r\n    <option name=\"NEW_BASE\" value=\"alfa/schoolquiz3.0\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Oleg &lt;oleg12794@gmail.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"fix\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"GithubProjectSettings\">\r\n    <option name=\"branchProtectionPatterns\">\r\n      <list>\r\n        <option value=\"master\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2MdM8qyqboV1nJrQXz70kLiA3XM\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"PROJECT_TRUSTED_KEY\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.17\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.lookFeel\" />\r\n  </component>\r\n  <component name=\"PsdUISettings\">\r\n    <option name=\"MODULE_TAB\" value=\"Properties\" />\r\n    <option name=\"LAST_EDITED_BUILD_TYPE\" value=\"release\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\SchoolQuiz\\app\\src\\main\\res\\drawable\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable-hdpi\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable-mdpi\" />\r\n      <recent name=\"E:\\SchoolQuiz\\app\\src\\main\\res\\mipmap-hdpi\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"E:\\SchoolQuiz\\app\\src\\main\\res\\mipmap-hdpi\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable-hdpi\" />\r\n      <recent name=\"E:\\SchoolQuiz\\app\\src\\main\\res\\back_main\" />\r\n      <recent name=\"E:\\Программирование\\Android\\schoolquiz3.0\\app\\src\\main\\res\\drawable-mdpi\" />\r\n    </key>\r\n    <key name=\"CreateKotlinClassDialog.RecentsKey\">\r\n      <recent name=\"com.tpov.schoolquiz.data.model\" />\r\n    </key>\r\n    <key name=\"MoveKotlinTopLevelDeclarationsDialog.RECENTS_KEY\">\r\n      <recent name=\"com.tpov.schoolquiz.secure\" />\r\n      <recent name=\"com.tpov.schoolquiz.presentation.network.event\" />\r\n    </key>\r\n    <key name=\"CopyKotlinDeclarationDialog.RECENTS_KEY\">\r\n      <recent name=\"com.tpov.schoolquiz.domain\" />\r\n      <recent name=\"com.tpov.schoolquiz.presentation.network.arena\" />\r\n      <recent name=\"com.tpov.schoolquiz.presentation.network.event\" />\r\n      <recent name=\"com.tpov.schoolquiz.data.fierbase\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"app\" type=\"AndroidRunConfigurationType\" factoryName=\"Android App\" activateToolWindowBeforeRun=\"false\">\r\n      <module name=\"schoolquiz.app.main\" />\r\n      <option name=\"DEPLOY\" value=\"true\" />\r\n      <option name=\"DEPLOY_APK_FROM_BUNDLE\" value=\"false\" />\r\n      <option name=\"DEPLOY_AS_INSTANT\" value=\"false\" />\r\n      <option name=\"ARTIFACT_NAME\" value=\"\" />\r\n      <option name=\"PM_INSTALL_OPTIONS\" value=\"\" />\r\n      <option name=\"ALL_USERS\" value=\"false\" />\r\n      <option name=\"ALWAYS_INSTALL_WITH_PM\" value=\"false\" />\r\n      <option name=\"CLEAR_APP_STORAGE\" value=\"false\" />\r\n      <option name=\"DYNAMIC_FEATURES_DISABLED_LIST\" value=\"\" />\r\n      <option name=\"ACTIVITY_EXTRA_FLAGS\" value=\"\" />\r\n      <option name=\"MODE\" value=\"default_activity\" />\r\n      <option name=\"CLEAR_LOGCAT\" value=\"false\" />\r\n      <option name=\"SHOW_LOGCAT_AUTOMATICALLY\" value=\"false\" />\r\n      <option name=\"INSPECTION_WITHOUT_ACTIVITY_RESTART\" value=\"false\" />\r\n      <option name=\"TARGET_SELECTION_MODE\" value=\"DEVICE_AND_SNAPSHOT_COMBO_BOX\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_CONFIGURATION_ID\" value=\"-1\" />\r\n      <option name=\"SELECTED_CLOUD_MATRIX_PROJECT_ID\" value=\"\" />\r\n      <option name=\"DEBUGGER_TYPE\" value=\"Auto\" />\r\n      <Auto>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Auto>\r\n      <Hybrid>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Hybrid>\r\n      <Java />\r\n      <Native>\r\n        <option name=\"USE_JAVA_AWARE_DEBUGGER\" value=\"false\" />\r\n        <option name=\"SHOW_STATIC_VARS\" value=\"true\" />\r\n        <option name=\"WORKING_DIR\" value=\"\" />\r\n        <option name=\"TARGET_LOGGING_CHANNELS\" value=\"lldb process:gdb-remote packets\" />\r\n        <option name=\"SHOW_OPTIMIZED_WARNING\" value=\"true\" />\r\n      </Native>\r\n      <Profilers>\r\n        <option name=\"ADVANCED_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"STARTUP_CPU_PROFILING_CONFIGURATION_NAME\" value=\"Java/Kotlin Method Sample (legacy)\" />\r\n        <option name=\"STARTUP_NATIVE_MEMORY_PROFILING_ENABLED\" value=\"false\" />\r\n        <option name=\"NATIVE_MEMORY_SAMPLE_RATE_BYTES\" value=\"2048\" />\r\n        <option name=\"PROFILING_MODE\" value=\"NOT_SET\" />\r\n      </Profilers>\r\n      <option name=\"DEEP_LINK\" value=\"\" />\r\n      <option name=\"ACTIVITY_CLASS\" value=\"\" />\r\n      <option name=\"SEARCH_ACTIVITY_IN_GLOBAL_SCOPE\" value=\"false\" />\r\n      <option name=\"SKIP_ACTIVITY_VALIDATION\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Android.Gradle.BeforeRunTask\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5af0db75-4be5-4ef3-8f7e-967bab06300d\" name=\"Changes\" comment=\"\" />\r\n      <created>1678092861294</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1678092861294</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Refactoring repository FB&#10;fix synth data\">\r\n      <created>1680706876046</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680706876046</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"fix load quiz\">\r\n      <created>1680773588658</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680773588658</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"fix questionActivity\">\r\n      <created>1680779736038</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680779736038</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Fix get question detail\">\r\n      <created>1680928726440</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680928726440</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"Fix get question detail\">\r\n      <created>1680977705498</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680977705498</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"add 2event -&gt; 3event\">\r\n      <created>1681047372984</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681047372984</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"fix create question (number = 0)&#10;fix synth server\">\r\n      <created>1681051869138</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681051869138</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"create chat\">\r\n      <created>1681137571296</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681137571296</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"edit sort chat\">\r\n      <created>1681185211864</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681185211864</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"fix setEvent quiz\">\r\n      <created>1681186958854</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681186958854</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"edit autoswipe chat\">\r\n      <created>1681207294559</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681207294559</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Edit registration fragment (delete to 2 path)\">\r\n      <created>1681221696668</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681221696668</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"create main list quiz and home list quiz\">\r\n      <created>1681376434409</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681376434409</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"edit merge front fragment - arena fragment\">\r\n      <created>1681471483540</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681471483540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Create setting and info\">\r\n      <created>1681725319556</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681725319556</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"fix main images\">\r\n      <created>1681982264179</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681982264179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"fix main images\">\r\n      <created>1681982665577</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681982665577</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"fix main images (center gravity)\">\r\n      <created>1681984258945</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681984258945</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"fix main images (center gravity)\">\r\n      <created>1681984507809</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681984507809</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"fix main images (center gravity)&#10;fix questionActivity &lt;- question8\">\r\n      <created>1681988419524</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681988419524</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"fix main images (center gravity)&#10;fix questionActivity &lt;- question8\">\r\n      <created>1681996293308</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681996293308</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"fix timer\">\r\n      <created>1682359780573</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682359780573</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"fix timer\">\r\n      <created>1682620234799</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682620234799</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"Create create question dialog\">\r\n      <created>1682950533561</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1682950533561</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"add create question\">\r\n      <created>1683196789093</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683196789093</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"Delete swipe item question&#10;Add swipe menu\">\r\n      <created>1683267960195</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683267960195</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Fix create acc\">\r\n      <created>1683954831933</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683954831933</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"Fix create question not acc\">\r\n      <created>1683959805715</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683959805715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"Fix synth life with FB&#10;Fix adds nolics in MainActivity\">\r\n      <created>1684505932256</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684505932256</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Edit setQuiz5, sort quiz5\">\r\n      <created>1685125505095</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685125505096</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"Edit setQuiz5, sort quiz5&#10;Delete question day&#10;Fix time format&#10;Edit translate &#10;Add detect language\">\r\n      <created>1685383661332</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685383661332</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"Merge\">\r\n      <created>1685432222909</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685432222909</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"Edit Design question activity&#10;Create background image\">\r\n      <created>1685444849867</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685444849867</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"Fix translate create double question&#10;Create get, set translate FB question\">\r\n      <created>1685457719356</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685457719356</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"Fix translate create double question&#10;Create get, set translate FB question\">\r\n      <created>1685458972467</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685458972467</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"Create search in quiz5&#10;Edit addQuiz icon in quiz1&#10;Create anim text chat\">\r\n      <created>1685545059889</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685545059889</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"Fix set number box day\">\r\n      <created>1686041335363</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1686041335363</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"Edit backgrounf create new quiz\">\r\n      <created>1687263276446</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687263276446</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"Edit backgrounf create new quiz\">\r\n      <created>1687268314513</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687268314513</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00044\" summary=\"Edit backgrounf create new quiz\">\r\n      <created>1687328212717</created>\r\n      <option name=\"number\" value=\"00044\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687328212717</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00045\" summary=\"Edit skill for time in gamme\">\r\n      <created>1687348470191</created>\r\n      <option name=\"number\" value=\"00045\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687348470191</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00046\" summary=\"Create profile language in registration with checkbox\">\r\n      <created>1687522038964</created>\r\n      <option name=\"number\" value=\"00046\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1687522038964</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00047\" summary=\"Ended main activity top bap\">\r\n      <created>1688220031872</created>\r\n      <option name=\"number\" value=\"00047\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688220031872</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00048\" summary=\"Remove unused views\">\r\n      <created>1688370611982</created>\r\n      <option name=\"number\" value=\"00048\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688370611982</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00049\" summary=\"Create reaction&#10;Edit limit synth\">\r\n      <created>1688381008710</created>\r\n      <option name=\"number\" value=\"00049\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688381008710</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00050\" summary=\"Fix crash nav menu\">\r\n      <created>1688482632781</created>\r\n      <option name=\"number\" value=\"00050\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688482632782</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00051\" summary=\"Add synth add points\">\r\n      <created>1688542401510</created>\r\n      <option name=\"number\" value=\"00051\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688542401511</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00052\" summary=\"Fix Create quiz dialog\">\r\n      <created>1688568874031</created>\r\n      <option name=\"number\" value=\"00052\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688568874031</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00053\" summary=\"Fix Create quiz dialog\">\r\n      <created>1688568899166</created>\r\n      <option name=\"number\" value=\"00053\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1688568899166</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"54\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"UnknownFeatures\">\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.reactivex.rxjava2:rxjava\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:com.google.protobuf:protobuf-java\" />\r\n    <option featureType=\"dependencySupport\" implementationName=\"java:io.grpc:grpc-api\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$/schoolquiz\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"Edit setQuiz5, sort quiz5\" />\r\n    <MESSAGE value=\"Edit setQuiz5, sort quiz5&#10;Delete question day&#10;Fix time format&#10;Edit translate\" />\r\n    <MESSAGE value=\"Edit setQuiz5, sort quiz5&#10;Delete question day&#10;Fix time format&#10;Edit translate &#10;Add detect language\" />\r\n    <MESSAGE value=\"Merge\" />\r\n    <MESSAGE value=\"Edit Design question activity&#10;Create background image\" />\r\n    <MESSAGE value=\"Fix translate create double question&#10;Create get, set translate FB question\" />\r\n    <MESSAGE value=\"Create search in quiz5\" />\r\n    <MESSAGE value=\"Create search in quiz5&#10;Edit addQuiz icon in quiz1&#10;Create anim text chat\" />\r\n    <MESSAGE value=\"Fix set number box day\" />\r\n    <MESSAGE value=\"Create popup menu info main item\" />\r\n    <MESSAGE value=\"Create translate with event translate\" />\r\n    <MESSAGE value=\"Create translate with event translate&#10;Edit numQuestion in item main activity\" />\r\n    <MESSAGE value=\"Edit backgrounf create new quiz\" />\r\n    <MESSAGE value=\"Edit skill for time in gamme\" />\r\n    <MESSAGE value=\"Create time in sms\" />\r\n    <MESSAGE value=\"Create profile language in registration with checkbox\" />\r\n    <MESSAGE value=\"Ended main activity top bap\" />\r\n    <MESSAGE value=\"Bugfix Hot alfa\" />\r\n    <MESSAGE value=\"Remove unused views\" />\r\n    <MESSAGE value=\"Create reaction&#10;Edit limit synth\" />\r\n    <MESSAGE value=\"Fix crash nav menu\" />\r\n    <MESSAGE value=\"Add synth add points\" />\r\n    <MESSAGE value=\"Edit Create quiz\" />\r\n    <MESSAGE value=\"Fix Create quiz dialog\" />\r\n    <MESSAGE value=\"Fix translate\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fix translate\" />\r\n    <option name=\"OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3abb2ba380c5fcbc8b522bb34764180581ad5d6b)
+++ b/.idea/workspace.xml	(date 1689222026374)
@@ -16,22 +16,29 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="5af0db75-4be5-4ef3-8f7e-967bab06300d" name="Changes" comment="Fix translate">
+      <change beforePath="$PROJECT_DIR$/.gradle/7.6/checksums/checksums.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/checksums/checksums.lock" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/7.6/checksums/sha1-checksums.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/checksums/sha1-checksums.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/executionHistory/executionHistory.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/fileHashes/fileHashes.lock" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/7.6/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.6/fileHashes/resourceHashesCache.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/file-system.probe" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/deploymentTargetDropDown.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/deploymentTargetDropDown.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivityAdapter.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/release/2.3.4.apk" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/release/app-release.aab" beforeDir="false" afterPath="$PROJECT_DIR$/app/release/app-release.aab" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/release/output-metadata.json" beforeDir="false" afterPath="$PROJECT_DIR$/app/release/output-metadata.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivity.kt" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/java/com/tpov/schoolquiz/presentation/main/MainActivity.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/src/main/res/values-ru/strings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/app/src/main/res/values-ru/strings.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
-  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[17e6bcfc]" />
+  <component name="ExecutionTargetManager" SELECTED_TARGET="device_and_snapshot_combo_box_target[C:\Users\oleg1\.android\avd\4_WVGA_Nexus_S_API_33.avd]" />
   <component name="ExternalProjectsData">
     <projectState path="$PROJECT_DIR$">
       <ProjectState />
@@ -71,7 +78,10 @@
     </option>
   </component>
   <component name="GenerateSignedApkSettings">
-    <option name="BUILD_TARGET_KEY" value="apk" />
+    <option name="EXPORT_PRIVATE_KEY" value="false" />
+    <option name="KEY_STORE_PATH" value="E:\Программирование\Android\Schoolquiz3.0.jks" />
+    <option name="KEY_ALIAS" value="key0" />
+    <option name="REMEMBER_PASSWORDS" value="true" />
   </component>
   <component name="Git.Merge.Settings">
     <option name="BRANCH" value="origin/fix" />
@@ -121,13 +131,18 @@
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
+    <property name="ApkExportedModule" value="schoolquiz.app" />
+    <property name="BundleExportedModule" value="schoolquiz.app" />
+    <property name="ExportApk.ApkPath" value="E:\Программирование\Android\schoolquiz3.0\app" />
+    <property name="ExportApk.BuildVariants" value="release" />
     <property name="PROJECT_TRUSTED_KEY" value="true" />
     <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
     <property name="cidr.known.project.marker" value="true" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/.." />
     <property name="project.structure.last.edited" value="Project" />
     <property name="project.structure.proportion" value="0.17" />
     <property name="project.structure.side.proportion" value="0.0" />
-    <property name="settings.editor.selected.configurable" value="preferences.lookFeel" />
+    <property name="settings.editor.selected.configurable" value="cn.yiiguxing.plugin.translate" />
   </component>
   <component name="PsdUISettings">
     <option name="MODULE_TAB" value="Properties" />
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\oleg1\\.android\\avd\\Pixel_XL_API_33.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2023-07-08T15:45:59.430901300Z\" />\r\n    <targetsSelectedWithDialog>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\oleg1\\.android\\avd\\4_WVGA_Nexus_S_API_33.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\oleg1\\.android\\avd\\Pixel_XL_API_33.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\oleg1\\.android\\avd\\Pixel_3a_API_33_x86_64.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetsSelectedWithDialog>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 3abb2ba380c5fcbc8b522bb34764180581ad5d6b)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1689222026381)
@@ -1,18 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="deploymentTargetDropDown">
-    <targetSelectedWithDropDown>
-      <Target>
-        <type value="QUICK_BOOT_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\oleg1\.android\avd\Pixel_XL_API_33.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2023-07-08T15:45:59.430901300Z" />
     <targetsSelectedWithDialog>
       <Target>
         <type value="QUICK_BOOT_TARGET" />
Index: app/release/output-metadata.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"version\": 3,\r\n  \"artifactType\": {\r\n    \"type\": \"APK\",\r\n    \"kind\": \"Directory\"\r\n  },\r\n  \"applicationId\": \"com.tpov.schoolquiz\",\r\n  \"variantName\": \"release\",\r\n  \"elements\": [\r\n    {\r\n      \"type\": \"SINGLE\",\r\n      \"filters\": [],\r\n      \"attributes\": [],\r\n      \"versionCode\": 2340,\r\n      \"versionName\": \"2.3.4\",\r\n      \"outputFile\": \"app-release.apk\"\r\n    }\r\n  ],\r\n  \"elementType\": \"File\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/release/output-metadata.json b/app/release/output-metadata.json
--- a/app/release/output-metadata.json	(revision 3abb2ba380c5fcbc8b522bb34764180581ad5d6b)
+++ b/app/release/output-metadata.json	(date 1689099483217)
@@ -11,8 +11,8 @@
       "type": "SINGLE",
       "filters": [],
       "attributes": [],
-      "versionCode": 2340,
-      "versionName": "2.3.4",
+      "versionCode": 3000,
+      "versionName": "3.0.0",
       "outputFile": "app-release.apk"
     }
   ],
